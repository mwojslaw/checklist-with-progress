{"dependencies":[{"name":"graphql","loc":{"line":38,"column":24}},{"name":"./linkToFetcher","loc":{"line":39,"column":30}},{"name":"../isEmptyObject","loc":{"line":40,"column":30}},{"name":"../schemaGenerator","loc":{"line":41,"column":32}},{"name":"./resolveFromParentTypename","loc":{"line":42,"column":42}},{"name":"./defaultMergedResolver","loc":{"line":43,"column":38}},{"name":"./errors","loc":{"line":44,"column":23}},{"name":"graphql-subscriptions","loc":{"line":45,"column":38}}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar schemaGenerator_1 = require(\"../schemaGenerator\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nvar errors_1 = require(\"./errors\");\nvar graphql_subscriptions_1 = require(\"graphql-subscriptions\");\nfunction makeRemoteExecutableSchema(_a) {\n    var schema = _a.schema, link = _a.link, fetcher = _a.fetcher, createPubSub = _a.createPubSub;\n    if (!fetcher && link) {\n        fetcher = linkToFetcher_1.default(link);\n    }\n    var typeDefs;\n    if (typeof schema === 'string') {\n        typeDefs = schema;\n        schema = graphql_1.buildSchema(typeDefs);\n    }\n    else {\n        typeDefs = graphql_1.printSchema(schema);\n    }\n    // prepare query resolvers\n    var queryResolvers = {};\n    var queryType = schema.getQueryType();\n    var queries = queryType.getFields();\n    Object.keys(queries).forEach(function (key) {\n        queryResolvers[key] = createResolver(fetcher);\n    });\n    // prepare mutation resolvers\n    var mutationResolvers = {};\n    var mutationType = schema.getMutationType();\n    if (mutationType) {\n        var mutations = mutationType.getFields();\n        Object.keys(mutations).forEach(function (key) {\n            mutationResolvers[key] = createResolver(fetcher);\n        });\n    }\n    // prepare subscription resolvers\n    var subscriptionResolvers = {};\n    var subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        var pubSub_1 = createPubSub ? createPubSub() : new graphql_subscriptions_1.PubSub();\n        var subscriptions = subscriptionType.getFields();\n        Object.keys(subscriptions).forEach(function (key) {\n            subscriptionResolvers[key] = {\n                subscribe: createSubscriptionResolver(key, link, pubSub_1),\n            };\n        });\n    }\n    // merge resolvers into resolver map\n    var resolvers = (_b = {}, _b[queryType.name] = queryResolvers, _b);\n    if (!isEmptyObject_1.default(mutationResolvers)) {\n        resolvers[mutationType.name] = mutationResolvers;\n    }\n    if (!isEmptyObject_1.default(subscriptionResolvers)) {\n        resolvers[subscriptionType.name] = subscriptionResolvers;\n    }\n    // add missing abstract resolvers (scalar, unions, interfaces)\n    var typeMap = schema.getTypeMap();\n    var types = Object.keys(typeMap).map(function (name) { return typeMap[name]; });\n    var _loop_1 = function (type) {\n        if (type instanceof graphql_1.GraphQLInterfaceType ||\n            type instanceof graphql_1.GraphQLUnionType) {\n            resolvers[type.name] = {\n                __resolveType: function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n            };\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            if (!(type === graphql_1.GraphQLID ||\n                type === graphql_1.GraphQLString ||\n                type === graphql_1.GraphQLFloat ||\n                type === graphql_1.GraphQLBoolean ||\n                type === graphql_1.GraphQLInt)) {\n                resolvers[type.name] = createPassThroughScalar(type);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType &&\n            type.name.slice(0, 2) !== '__' &&\n            type !== queryType &&\n            type !== mutationType &&\n            type !== subscriptionType) {\n            var resolver_1 = {};\n            Object.keys(type.getFields()).forEach(function (field) {\n                resolver_1[field] = defaultMergedResolver_1.default;\n            });\n            resolvers[type.name] = resolver_1;\n        }\n    };\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        _loop_1(type);\n    }\n    return schemaGenerator_1.makeExecutableSchema({\n        typeDefs: typeDefs,\n        resolvers: resolvers,\n    });\n    var _b;\n}\nexports.default = makeRemoteExecutableSchema;\nfunction createResolver(fetcher) {\n    var _this = this;\n    return function (root, args, context, info) { return __awaiter(_this, void 0, void 0, function () {\n        var fragments, document, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n                    document = {\n                        kind: graphql_1.Kind.DOCUMENT,\n                        definitions: [info.operation].concat(fragments),\n                    };\n                    return [4 /*yield*/, fetcher({\n                            query: graphql_1.print(document),\n                            variables: info.variableValues,\n                            context: { graphqlContext: context },\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info)];\n            }\n        });\n    }); };\n}\nfunction createSubscriptionResolver(name, link, pubSub) {\n    return function (root, args, context, info) {\n        var fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n        var document = {\n            kind: graphql_1.Kind.DOCUMENT,\n            definitions: [info.operation].concat(fragments),\n        };\n        var operation = {\n            query: document,\n            variables: info.variableValues,\n            context: { graphqlContext: context },\n        };\n        var observable = linkToFetcher_1.execute(link, operation);\n        var observer = {\n            next: function (value) {\n                pubSub.publish(\"remote-schema-\" + name, value.data);\n            },\n            error: function (err) {\n                pubSub.publish(\"remote-schema-\" + name, { errors: [err] });\n            },\n        };\n        observable.subscribe(observer);\n        return pubSub.asyncIterator(\"remote-schema-\" + name);\n    };\n}\nfunction createPassThroughScalar(_a) {\n    var name = _a.name, description = _a.description;\n    return new graphql_1.GraphQLScalarType({\n        name: name,\n        description: description,\n        serialize: function (value) {\n            return value;\n        },\n        parseValue: function (value) {\n            return value;\n        },\n        parseLiteral: function (ast) {\n            return parseLiteral(ast);\n        },\n    });\n}\nfunction parseLiteral(ast) {\n    switch (ast.kind) {\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.BOOLEAN: {\n            return ast.value;\n        }\n        case graphql_1.Kind.INT:\n        case graphql_1.Kind.FLOAT: {\n            return parseFloat(ast.value);\n        }\n        case graphql_1.Kind.OBJECT: {\n            var value_1 = Object.create(null);\n            ast.fields.forEach(function (field) {\n                value_1[field.name.value] = parseLiteral(field.value);\n            });\n            return value_1;\n        }\n        case graphql_1.Kind.LIST: {\n            return ast.values.map(parseLiteral);\n        }\n        default:\n            return null;\n    }\n}\n//# sourceMappingURL=makeRemoteExecutableSchema.js.map","map":{"mappings":[{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}}],"sources":{"node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar linkToFetcher_1 = require(\"./linkToFetcher\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar schemaGenerator_1 = require(\"../schemaGenerator\");\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nvar defaultMergedResolver_1 = require(\"./defaultMergedResolver\");\nvar errors_1 = require(\"./errors\");\nvar graphql_subscriptions_1 = require(\"graphql-subscriptions\");\nfunction makeRemoteExecutableSchema(_a) {\n    var schema = _a.schema, link = _a.link, fetcher = _a.fetcher, createPubSub = _a.createPubSub;\n    if (!fetcher && link) {\n        fetcher = linkToFetcher_1.default(link);\n    }\n    var typeDefs;\n    if (typeof schema === 'string') {\n        typeDefs = schema;\n        schema = graphql_1.buildSchema(typeDefs);\n    }\n    else {\n        typeDefs = graphql_1.printSchema(schema);\n    }\n    // prepare query resolvers\n    var queryResolvers = {};\n    var queryType = schema.getQueryType();\n    var queries = queryType.getFields();\n    Object.keys(queries).forEach(function (key) {\n        queryResolvers[key] = createResolver(fetcher);\n    });\n    // prepare mutation resolvers\n    var mutationResolvers = {};\n    var mutationType = schema.getMutationType();\n    if (mutationType) {\n        var mutations = mutationType.getFields();\n        Object.keys(mutations).forEach(function (key) {\n            mutationResolvers[key] = createResolver(fetcher);\n        });\n    }\n    // prepare subscription resolvers\n    var subscriptionResolvers = {};\n    var subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        var pubSub_1 = createPubSub ? createPubSub() : new graphql_subscriptions_1.PubSub();\n        var subscriptions = subscriptionType.getFields();\n        Object.keys(subscriptions).forEach(function (key) {\n            subscriptionResolvers[key] = {\n                subscribe: createSubscriptionResolver(key, link, pubSub_1),\n            };\n        });\n    }\n    // merge resolvers into resolver map\n    var resolvers = (_b = {}, _b[queryType.name] = queryResolvers, _b);\n    if (!isEmptyObject_1.default(mutationResolvers)) {\n        resolvers[mutationType.name] = mutationResolvers;\n    }\n    if (!isEmptyObject_1.default(subscriptionResolvers)) {\n        resolvers[subscriptionType.name] = subscriptionResolvers;\n    }\n    // add missing abstract resolvers (scalar, unions, interfaces)\n    var typeMap = schema.getTypeMap();\n    var types = Object.keys(typeMap).map(function (name) { return typeMap[name]; });\n    var _loop_1 = function (type) {\n        if (type instanceof graphql_1.GraphQLInterfaceType ||\n            type instanceof graphql_1.GraphQLUnionType) {\n            resolvers[type.name] = {\n                __resolveType: function (parent, context, info) {\n                    return resolveFromParentTypename_1.default(parent, info.schema);\n                },\n            };\n        }\n        else if (type instanceof graphql_1.GraphQLScalarType) {\n            if (!(type === graphql_1.GraphQLID ||\n                type === graphql_1.GraphQLString ||\n                type === graphql_1.GraphQLFloat ||\n                type === graphql_1.GraphQLBoolean ||\n                type === graphql_1.GraphQLInt)) {\n                resolvers[type.name] = createPassThroughScalar(type);\n            }\n        }\n        else if (type instanceof graphql_1.GraphQLObjectType &&\n            type.name.slice(0, 2) !== '__' &&\n            type !== queryType &&\n            type !== mutationType &&\n            type !== subscriptionType) {\n            var resolver_1 = {};\n            Object.keys(type.getFields()).forEach(function (field) {\n                resolver_1[field] = defaultMergedResolver_1.default;\n            });\n            resolvers[type.name] = resolver_1;\n        }\n    };\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        _loop_1(type);\n    }\n    return schemaGenerator_1.makeExecutableSchema({\n        typeDefs: typeDefs,\n        resolvers: resolvers,\n    });\n    var _b;\n}\nexports.default = makeRemoteExecutableSchema;\nfunction createResolver(fetcher) {\n    var _this = this;\n    return function (root, args, context, info) { return __awaiter(_this, void 0, void 0, function () {\n        var fragments, document, result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n                    document = {\n                        kind: graphql_1.Kind.DOCUMENT,\n                        definitions: [info.operation].concat(fragments),\n                    };\n                    return [4 /*yield*/, fetcher({\n                            query: graphql_1.print(document),\n                            variables: info.variableValues,\n                            context: { graphqlContext: context },\n                        })];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info)];\n            }\n        });\n    }); };\n}\nfunction createSubscriptionResolver(name, link, pubSub) {\n    return function (root, args, context, info) {\n        var fragments = Object.keys(info.fragments).map(function (fragment) { return info.fragments[fragment]; });\n        var document = {\n            kind: graphql_1.Kind.DOCUMENT,\n            definitions: [info.operation].concat(fragments),\n        };\n        var operation = {\n            query: document,\n            variables: info.variableValues,\n            context: { graphqlContext: context },\n        };\n        var observable = linkToFetcher_1.execute(link, operation);\n        var observer = {\n            next: function (value) {\n                pubSub.publish(\"remote-schema-\" + name, value.data);\n            },\n            error: function (err) {\n                pubSub.publish(\"remote-schema-\" + name, { errors: [err] });\n            },\n        };\n        observable.subscribe(observer);\n        return pubSub.asyncIterator(\"remote-schema-\" + name);\n    };\n}\nfunction createPassThroughScalar(_a) {\n    var name = _a.name, description = _a.description;\n    return new graphql_1.GraphQLScalarType({\n        name: name,\n        description: description,\n        serialize: function (value) {\n            return value;\n        },\n        parseValue: function (value) {\n            return value;\n        },\n        parseLiteral: function (ast) {\n            return parseLiteral(ast);\n        },\n    });\n}\nfunction parseLiteral(ast) {\n    switch (ast.kind) {\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.BOOLEAN: {\n            return ast.value;\n        }\n        case graphql_1.Kind.INT:\n        case graphql_1.Kind.FLOAT: {\n            return parseFloat(ast.value);\n        }\n        case graphql_1.Kind.OBJECT: {\n            var value_1 = Object.create(null);\n            ast.fields.forEach(function (field) {\n                value_1[field.name.value] = parseLiteral(field.value);\n            });\n            return value_1;\n        }\n        case graphql_1.Kind.LIST: {\n            return ast.values.map(parseLiteral);\n        }\n        default:\n            return null;\n    }\n}\n//# sourceMappingURL=makeRemoteExecutableSchema.js.map"},"lineCount":228}},"hash":"f06321eca18466af387209963b998411","cacheData":{"env":{}}}
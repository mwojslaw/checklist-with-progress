{"dependencies":[{"name":"../jsutils/invariant","loc":{"line":8,"column":25}},{"name":"../jsutils/keyMap","loc":{"line":12,"column":22}},{"name":"../jsutils/keyValMap","loc":{"line":16,"column":25}},{"name":"./valueFromAST","loc":{"line":20,"column":28}},{"name":"../language/parser","loc":{"line":22,"column":22}},{"name":"../type/schema","loc":{"line":24,"column":22}},{"name":"../type/definition","loc":{"line":26,"column":26}},{"name":"../type/introspection","loc":{"line":28,"column":29}},{"name":"../type/scalars","loc":{"line":30,"column":23}},{"name":"../type/directives","loc":{"line":32,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _parser = require('../language/parser');\n\nvar _schema = require('../type/schema');\n\nvar _definition = require('../type/definition');\n\nvar _introspection = require('../type/introspection');\n\nvar _scalars = require('../type/scalars');\n\nvar _directives = require('../type/directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n */\nfunction buildClientSchema(introspection) {\n\n  // Get the schema from the introspection result.\n  var schemaIntrospection = introspection.__schema;\n\n  // Converts the list of types into a keyMap based on the type names.\n  var typeIntrospectionMap = (0, _keyMap2.default)(schemaIntrospection.types, function (type) {\n    return type.name;\n  });\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars. All functions below are inline\n  // so that this type def cache is within the scope of the closure.\n  var typeDefCache = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      var nullableType = getType(nullableRef);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'No nesting nonnull.') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getNamedType(typeRef.name);\n  }\n\n  function getNamedType(typeName) {\n    if (typeDefCache[typeName]) {\n      return typeDefCache[typeName];\n    }\n    var typeIntrospection = typeIntrospectionMap[typeName];\n    if (!typeIntrospection) {\n      throw new Error('Invalid or incomplete schema, unknown type: ' + typeName + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n    var typeDef = buildType(typeIntrospection);\n    typeDefCache[typeName] = typeDef;\n    return typeDef;\n  }\n\n  function getInputType(typeRef) {\n    var type = getType(typeRef);\n    !(0, _definition.isInputType)(type) ? (0, _invariant2.default)(0, 'Introspection must provide input type for arguments.') : void 0;\n    return type;\n  }\n\n  function getOutputType(typeRef) {\n    var type = getType(typeRef);\n    !(0, _definition.isOutputType)(type) ? (0, _invariant2.default)(0, 'Introspection must provide output type for fields.') : void 0;\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    var type = getType(typeRef);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Introspection must provide object type for possibleTypes.') : void 0;\n    return type;\n  }\n\n  function getInterfaceType(typeRef) {\n    var type = getType(typeRef);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Introspection must provide interface type for interfaces.') : void 0;\n    return type;\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function buildType(type) {\n    switch (type.kind) {\n      case _introspection.TypeKind.SCALAR:\n        return buildScalarDef(type);\n      case _introspection.TypeKind.OBJECT:\n        return buildObjectDef(type);\n      case _introspection.TypeKind.INTERFACE:\n        return buildInterfaceDef(type);\n      case _introspection.TypeKind.UNION:\n        return buildUnionDef(type);\n      case _introspection.TypeKind.ENUM:\n        return buildEnumDef(type);\n      case _introspection.TypeKind.INPUT_OBJECT:\n        return buildInputObjectDef(type);\n      default:\n        throw new Error('Invalid or incomplete schema, unknown kind: ' + type.kind + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      serialize: function serialize(id) {\n        return id;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: objectIntrospection.interfaces.map(getInterfaceType),\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      },\n      resolveType: cannotExecuteClientSchema\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: unionIntrospection.possibleTypes.map(getObjectType),\n      resolveType: cannotExecuteClientSchema\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap2.default)(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    return (0, _keyValMap2.default)(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, function (fieldIntrospection) {\n      return {\n        description: fieldIntrospection.description,\n        deprecationReason: fieldIntrospection.deprecationReason,\n        type: getOutputType(fieldIntrospection.type),\n        args: buildInputValueDefMap(fieldIntrospection.args)\n      };\n    });\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap2.default)(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getInputType(inputValueIntrospection.type);\n    var defaultValue = inputValueIntrospection.defaultValue ? (0, _valueFromAST.valueFromAST)((0, _parser.parseValue)(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      name: inputValueIntrospection.name,\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    // Support deprecated `on****` fields for building `locations`, as this\n    // is used by GraphiQL which may need to support outdated servers.\n    var locations = directiveIntrospection.locations ? directiveIntrospection.locations.slice() : [].concat(!directiveIntrospection.onField ? [] : [_directives.DirectiveLocation.FIELD], !directiveIntrospection.onOperation ? [] : [_directives.DirectiveLocation.QUERY, _directives.DirectiveLocation.MUTATION, _directives.DirectiveLocation.SUBSCRIPTION], !directiveIntrospection.onFragment ? [] : [_directives.DirectiveLocation.FRAGMENT_DEFINITION, _directives.DirectiveLocation.FRAGMENT_SPREAD, _directives.DirectiveLocation.INLINE_FRAGMENT]);\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      locations: locations,\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var types = schemaIntrospection.types.map(function (typeIntrospection) {\n    return getNamedType(typeIntrospection.name);\n  });\n\n  // Get the root Query, Mutation, and Subscription types.\n  var queryType = getObjectType(schemaIntrospection.queryType);\n\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null;\n\n  // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : [];\n\n  // Then produce and return a Schema with these types.\n  return new _schema.GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: directives\n  });\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction cannotExecuteClientSchema() {\n  throw new Error('Client Schema cannot use Interface or Union types for execution.');\n}","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/utilities/buildClientSchema.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _parser = require('../language/parser');\n\nvar _schema = require('../type/schema');\n\nvar _definition = require('../type/definition');\n\nvar _introspection = require('../type/introspection');\n\nvar _scalars = require('../type/scalars');\n\nvar _directives = require('../type/directives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n */\nfunction buildClientSchema(introspection) {\n\n  // Get the schema from the introspection result.\n  var schemaIntrospection = introspection.__schema;\n\n  // Converts the list of types into a keyMap based on the type names.\n  var typeIntrospectionMap = (0, _keyMap2.default)(schemaIntrospection.types, function (type) {\n    return type.name;\n  });\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars. All functions below are inline\n  // so that this type def cache is within the scope of the closure.\n  var typeDefCache = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      var nullableType = getType(nullableRef);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'No nesting nonnull.') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getNamedType(typeRef.name);\n  }\n\n  function getNamedType(typeName) {\n    if (typeDefCache[typeName]) {\n      return typeDefCache[typeName];\n    }\n    var typeIntrospection = typeIntrospectionMap[typeName];\n    if (!typeIntrospection) {\n      throw new Error('Invalid or incomplete schema, unknown type: ' + typeName + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n    var typeDef = buildType(typeIntrospection);\n    typeDefCache[typeName] = typeDef;\n    return typeDef;\n  }\n\n  function getInputType(typeRef) {\n    var type = getType(typeRef);\n    !(0, _definition.isInputType)(type) ? (0, _invariant2.default)(0, 'Introspection must provide input type for arguments.') : void 0;\n    return type;\n  }\n\n  function getOutputType(typeRef) {\n    var type = getType(typeRef);\n    !(0, _definition.isOutputType)(type) ? (0, _invariant2.default)(0, 'Introspection must provide output type for fields.') : void 0;\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    var type = getType(typeRef);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Introspection must provide object type for possibleTypes.') : void 0;\n    return type;\n  }\n\n  function getInterfaceType(typeRef) {\n    var type = getType(typeRef);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Introspection must provide interface type for interfaces.') : void 0;\n    return type;\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function buildType(type) {\n    switch (type.kind) {\n      case _introspection.TypeKind.SCALAR:\n        return buildScalarDef(type);\n      case _introspection.TypeKind.OBJECT:\n        return buildObjectDef(type);\n      case _introspection.TypeKind.INTERFACE:\n        return buildInterfaceDef(type);\n      case _introspection.TypeKind.UNION:\n        return buildUnionDef(type);\n      case _introspection.TypeKind.ENUM:\n        return buildEnumDef(type);\n      case _introspection.TypeKind.INPUT_OBJECT:\n        return buildInputObjectDef(type);\n      default:\n        throw new Error('Invalid or incomplete schema, unknown kind: ' + type.kind + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      serialize: function serialize(id) {\n        return id;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: objectIntrospection.interfaces.map(getInterfaceType),\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      },\n      resolveType: cannotExecuteClientSchema\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: unionIntrospection.possibleTypes.map(getObjectType),\n      resolveType: cannotExecuteClientSchema\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap2.default)(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    return (0, _keyValMap2.default)(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, function (fieldIntrospection) {\n      return {\n        description: fieldIntrospection.description,\n        deprecationReason: fieldIntrospection.deprecationReason,\n        type: getOutputType(fieldIntrospection.type),\n        args: buildInputValueDefMap(fieldIntrospection.args)\n      };\n    });\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap2.default)(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getInputType(inputValueIntrospection.type);\n    var defaultValue = inputValueIntrospection.defaultValue ? (0, _valueFromAST.valueFromAST)((0, _parser.parseValue)(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      name: inputValueIntrospection.name,\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    // Support deprecated `on****` fields for building `locations`, as this\n    // is used by GraphiQL which may need to support outdated servers.\n    var locations = directiveIntrospection.locations ? directiveIntrospection.locations.slice() : [].concat(!directiveIntrospection.onField ? [] : [_directives.DirectiveLocation.FIELD], !directiveIntrospection.onOperation ? [] : [_directives.DirectiveLocation.QUERY, _directives.DirectiveLocation.MUTATION, _directives.DirectiveLocation.SUBSCRIPTION], !directiveIntrospection.onFragment ? [] : [_directives.DirectiveLocation.FRAGMENT_DEFINITION, _directives.DirectiveLocation.FRAGMENT_SPREAD, _directives.DirectiveLocation.INLINE_FRAGMENT]);\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      locations: locations,\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var types = schemaIntrospection.types.map(function (typeIntrospection) {\n    return getNamedType(typeIntrospection.name);\n  });\n\n  // Get the root Query, Mutation, and Subscription types.\n  var queryType = getObjectType(schemaIntrospection.queryType);\n\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null;\n\n  // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : [];\n\n  // Then produce and return a Schema with these types.\n  return new _schema.GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: directives\n  });\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction cannotExecuteClientSchema() {\n  throw new Error('Client Schema cannot use Interface or Union types for execution.');\n}"},"lineCount":309}},"hash":"4c32c805a7c89454c81294c03a1ba1fd","cacheData":{"env":{}}}
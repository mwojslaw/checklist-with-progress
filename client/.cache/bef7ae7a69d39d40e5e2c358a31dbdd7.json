{"dependencies":[{"name":"graphql","loc":{"line":13,"column":24}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction mockNetworkInterface() {\n    var mockedResponses = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mockedResponses[_i] = arguments[_i];\n    }\n    return new MockNetworkInterface(mockedResponses);\n}\nexports.mockNetworkInterface = mockNetworkInterface;\nfunction mockSubscriptionNetworkInterface(mockedSubscriptions) {\n    var mockedResponses = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        mockedResponses[_i - 1] = arguments[_i];\n    }\n    return new MockSubscriptionNetworkInterface(mockedSubscriptions, mockedResponses);\n}\nexports.mockSubscriptionNetworkInterface = mockSubscriptionNetworkInterface;\nfunction mockBatchedNetworkInterface() {\n    var mockedResponses = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mockedResponses[_i] = arguments[_i];\n    }\n    return new MockBatchedNetworkInterface(mockedResponses);\n}\nexports.mockBatchedNetworkInterface = mockBatchedNetworkInterface;\nvar MockNetworkInterface = (function () {\n    function MockNetworkInterface(mockedResponses) {\n        var _this = this;\n        this.mockedResponsesByKey = {};\n        mockedResponses.forEach(function (mockedResponse) {\n            _this.addMockedResponse(mockedResponse);\n        });\n    }\n    MockNetworkInterface.prototype.addMockedResponse = function (mockedResponse) {\n        var key = requestToKey(mockedResponse.request);\n        var mockedResponses = this.mockedResponsesByKey[key];\n        if (!mockedResponses) {\n            mockedResponses = [];\n            this.mockedResponsesByKey[key] = mockedResponses;\n        }\n        mockedResponses.push(mockedResponse);\n    };\n    MockNetworkInterface.prototype.query = function (request) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var parsedRequest = {\n                query: request.query,\n                variables: request.variables,\n                debugName: request.debugName,\n            };\n            var key = requestToKey(parsedRequest);\n            var responses = _this.mockedResponsesByKey[key];\n            if (!responses || responses.length === 0) {\n                throw new Error(\"No more mocked responses for the query: \" + graphql_1.print(request.query) + \", variables: \" + JSON.stringify(request.variables));\n            }\n            var _a = responses.shift(), result = _a.result, error = _a.error, delay = _a.delay;\n            if (!result && !error) {\n                throw new Error(\"Mocked response should contain either result or error: \" + key);\n            }\n            setTimeout(function () {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve(result);\n                }\n            }, delay ? delay : 0);\n        });\n    };\n    return MockNetworkInterface;\n}());\nexports.MockNetworkInterface = MockNetworkInterface;\nvar MockSubscriptionNetworkInterface = (function (_super) {\n    __extends(MockSubscriptionNetworkInterface, _super);\n    function MockSubscriptionNetworkInterface(mockedSubscriptions, mockedResponses) {\n        var _this = _super.call(this, mockedResponses) || this;\n        _this.mockedSubscriptionsByKey = {};\n        _this.mockedSubscriptionsById = {};\n        _this.handlersById = {};\n        _this.subId = 0;\n        mockedSubscriptions.forEach(function (sub) {\n            _this.addMockedSubscription(sub);\n        });\n        return _this;\n    }\n    MockSubscriptionNetworkInterface.prototype.generateSubscriptionId = function () {\n        var requestId = this.subId;\n        this.subId++;\n        return requestId;\n    };\n    MockSubscriptionNetworkInterface.prototype.addMockedSubscription = function (mockedSubscription) {\n        var key = requestToKey(mockedSubscription.request);\n        if (mockedSubscription.id === undefined) {\n            mockedSubscription.id = this.generateSubscriptionId();\n        }\n        var mockedSubs = this.mockedSubscriptionsByKey[key];\n        if (!mockedSubs) {\n            mockedSubs = [];\n            this.mockedSubscriptionsByKey[key] = mockedSubs;\n        }\n        mockedSubs.push(mockedSubscription);\n    };\n    MockSubscriptionNetworkInterface.prototype.subscribe = function (request, handler) {\n        var parsedRequest = {\n            query: request.query,\n            variables: request.variables,\n            debugName: request.debugName,\n        };\n        var key = requestToKey(parsedRequest);\n        if (this.mockedSubscriptionsByKey.hasOwnProperty(key)) {\n            var subscription = this.mockedSubscriptionsByKey[key].shift();\n            var id = subscription.id;\n            this.handlersById[id] = handler;\n            this.mockedSubscriptionsById[id] = subscription;\n            return id;\n        }\n        else {\n            throw new Error('Network interface does not have subscription associated with this request.');\n        }\n    };\n    ;\n    MockSubscriptionNetworkInterface.prototype.fireResult = function (id) {\n        var handler = this.handlersById[id];\n        if (this.mockedSubscriptionsById.hasOwnProperty(id.toString())) {\n            var subscription = this.mockedSubscriptionsById[id];\n            if (subscription.results.length === 0) {\n                throw new Error(\"No more mocked subscription responses for the query: \" +\n                    (graphql_1.print(subscription.request.query) + \", variables: \" + JSON.stringify(subscription.request.variables)));\n            }\n            var response_1 = subscription.results.shift();\n            setTimeout(function () {\n                handler(response_1.error, response_1.result);\n            }, response_1.delay ? response_1.delay : 0);\n        }\n        else {\n            throw new Error('Network interface does not have subscription associated with this id.');\n        }\n    };\n    MockSubscriptionNetworkInterface.prototype.unsubscribe = function (id) {\n        delete this.mockedSubscriptionsById[id];\n    };\n    return MockSubscriptionNetworkInterface;\n}(MockNetworkInterface));\nexports.MockSubscriptionNetworkInterface = MockSubscriptionNetworkInterface;\nvar MockBatchedNetworkInterface = (function (_super) {\n    __extends(MockBatchedNetworkInterface, _super);\n    function MockBatchedNetworkInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MockBatchedNetworkInterface.prototype.batchQuery = function (requests) {\n        var _this = this;\n        var resultPromises = [];\n        requests.forEach(function (request) {\n            resultPromises.push(_this.query(request));\n        });\n        return Promise.all(resultPromises);\n    };\n    return MockBatchedNetworkInterface;\n}(MockNetworkInterface));\nexports.MockBatchedNetworkInterface = MockBatchedNetworkInterface;\nfunction requestToKey(request) {\n    var queryString = request.query && graphql_1.print(request.query);\n    return JSON.stringify({\n        variables: request.variables || {},\n        debugName: request.debugName,\n        query: queryString,\n    });\n}\n//# sourceMappingURL=mockNetworkInterface.js.map","map":{"mappings":[{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}}],"sources":{"node_modules/apollo-test-utils/dist/src/mocks/mockNetworkInterface.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nfunction mockNetworkInterface() {\n    var mockedResponses = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mockedResponses[_i] = arguments[_i];\n    }\n    return new MockNetworkInterface(mockedResponses);\n}\nexports.mockNetworkInterface = mockNetworkInterface;\nfunction mockSubscriptionNetworkInterface(mockedSubscriptions) {\n    var mockedResponses = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        mockedResponses[_i - 1] = arguments[_i];\n    }\n    return new MockSubscriptionNetworkInterface(mockedSubscriptions, mockedResponses);\n}\nexports.mockSubscriptionNetworkInterface = mockSubscriptionNetworkInterface;\nfunction mockBatchedNetworkInterface() {\n    var mockedResponses = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        mockedResponses[_i] = arguments[_i];\n    }\n    return new MockBatchedNetworkInterface(mockedResponses);\n}\nexports.mockBatchedNetworkInterface = mockBatchedNetworkInterface;\nvar MockNetworkInterface = (function () {\n    function MockNetworkInterface(mockedResponses) {\n        var _this = this;\n        this.mockedResponsesByKey = {};\n        mockedResponses.forEach(function (mockedResponse) {\n            _this.addMockedResponse(mockedResponse);\n        });\n    }\n    MockNetworkInterface.prototype.addMockedResponse = function (mockedResponse) {\n        var key = requestToKey(mockedResponse.request);\n        var mockedResponses = this.mockedResponsesByKey[key];\n        if (!mockedResponses) {\n            mockedResponses = [];\n            this.mockedResponsesByKey[key] = mockedResponses;\n        }\n        mockedResponses.push(mockedResponse);\n    };\n    MockNetworkInterface.prototype.query = function (request) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var parsedRequest = {\n                query: request.query,\n                variables: request.variables,\n                debugName: request.debugName,\n            };\n            var key = requestToKey(parsedRequest);\n            var responses = _this.mockedResponsesByKey[key];\n            if (!responses || responses.length === 0) {\n                throw new Error(\"No more mocked responses for the query: \" + graphql_1.print(request.query) + \", variables: \" + JSON.stringify(request.variables));\n            }\n            var _a = responses.shift(), result = _a.result, error = _a.error, delay = _a.delay;\n            if (!result && !error) {\n                throw new Error(\"Mocked response should contain either result or error: \" + key);\n            }\n            setTimeout(function () {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve(result);\n                }\n            }, delay ? delay : 0);\n        });\n    };\n    return MockNetworkInterface;\n}());\nexports.MockNetworkInterface = MockNetworkInterface;\nvar MockSubscriptionNetworkInterface = (function (_super) {\n    __extends(MockSubscriptionNetworkInterface, _super);\n    function MockSubscriptionNetworkInterface(mockedSubscriptions, mockedResponses) {\n        var _this = _super.call(this, mockedResponses) || this;\n        _this.mockedSubscriptionsByKey = {};\n        _this.mockedSubscriptionsById = {};\n        _this.handlersById = {};\n        _this.subId = 0;\n        mockedSubscriptions.forEach(function (sub) {\n            _this.addMockedSubscription(sub);\n        });\n        return _this;\n    }\n    MockSubscriptionNetworkInterface.prototype.generateSubscriptionId = function () {\n        var requestId = this.subId;\n        this.subId++;\n        return requestId;\n    };\n    MockSubscriptionNetworkInterface.prototype.addMockedSubscription = function (mockedSubscription) {\n        var key = requestToKey(mockedSubscription.request);\n        if (mockedSubscription.id === undefined) {\n            mockedSubscription.id = this.generateSubscriptionId();\n        }\n        var mockedSubs = this.mockedSubscriptionsByKey[key];\n        if (!mockedSubs) {\n            mockedSubs = [];\n            this.mockedSubscriptionsByKey[key] = mockedSubs;\n        }\n        mockedSubs.push(mockedSubscription);\n    };\n    MockSubscriptionNetworkInterface.prototype.subscribe = function (request, handler) {\n        var parsedRequest = {\n            query: request.query,\n            variables: request.variables,\n            debugName: request.debugName,\n        };\n        var key = requestToKey(parsedRequest);\n        if (this.mockedSubscriptionsByKey.hasOwnProperty(key)) {\n            var subscription = this.mockedSubscriptionsByKey[key].shift();\n            var id = subscription.id;\n            this.handlersById[id] = handler;\n            this.mockedSubscriptionsById[id] = subscription;\n            return id;\n        }\n        else {\n            throw new Error('Network interface does not have subscription associated with this request.');\n        }\n    };\n    ;\n    MockSubscriptionNetworkInterface.prototype.fireResult = function (id) {\n        var handler = this.handlersById[id];\n        if (this.mockedSubscriptionsById.hasOwnProperty(id.toString())) {\n            var subscription = this.mockedSubscriptionsById[id];\n            if (subscription.results.length === 0) {\n                throw new Error(\"No more mocked subscription responses for the query: \" +\n                    (graphql_1.print(subscription.request.query) + \", variables: \" + JSON.stringify(subscription.request.variables)));\n            }\n            var response_1 = subscription.results.shift();\n            setTimeout(function () {\n                handler(response_1.error, response_1.result);\n            }, response_1.delay ? response_1.delay : 0);\n        }\n        else {\n            throw new Error('Network interface does not have subscription associated with this id.');\n        }\n    };\n    MockSubscriptionNetworkInterface.prototype.unsubscribe = function (id) {\n        delete this.mockedSubscriptionsById[id];\n    };\n    return MockSubscriptionNetworkInterface;\n}(MockNetworkInterface));\nexports.MockSubscriptionNetworkInterface = MockSubscriptionNetworkInterface;\nvar MockBatchedNetworkInterface = (function (_super) {\n    __extends(MockBatchedNetworkInterface, _super);\n    function MockBatchedNetworkInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MockBatchedNetworkInterface.prototype.batchQuery = function (requests) {\n        var _this = this;\n        var resultPromises = [];\n        requests.forEach(function (request) {\n            resultPromises.push(_this.query(request));\n        });\n        return Promise.all(resultPromises);\n    };\n    return MockBatchedNetworkInterface;\n}(MockNetworkInterface));\nexports.MockBatchedNetworkInterface = MockBatchedNetworkInterface;\nfunction requestToKey(request) {\n    var queryString = request.query && graphql_1.print(request.query);\n    return JSON.stringify({\n        variables: request.variables || {},\n        debugName: request.debugName,\n        query: queryString,\n    });\n}\n//# sourceMappingURL=mockNetworkInterface.js.map"},"lineCount":181}},"hash":"be99c80d99425b83aa9cabbd904ff1a0","cacheData":{"env":{}}}
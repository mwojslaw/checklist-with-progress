{"dependencies":[{"name":"../../error","loc":{"line":9,"column":21}},{"name":"../../language/printer","loc":{"line":11,"column":23}},{"name":"../../utilities/isValidLiteralValue","loc":{"line":13,"column":35}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badValueMessage = badValueMessage;\nexports.ArgumentsOfCorrectType = ArgumentsOfCorrectType;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _isValidLiteralValue = require('../../utilities/isValidLiteralValue');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction badValueMessage(argName, type, value, verboseErrors) {\n  var message = verboseErrors ? '\\n' + verboseErrors.join('\\n') : '';\n  return 'Argument \"' + argName + '\" has invalid value ' + value + '.' + message;\n}\n\n/**\n * Argument values of correct type\n *\n * A GraphQL document is only valid if all field argument literal values are\n * of the type expected by their position.\n */\nfunction ArgumentsOfCorrectType(context) {\n  return {\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      if (argDef) {\n        var errors = (0, _isValidLiteralValue.isValidLiteralValue)(argDef.type, node.value);\n        if (errors && errors.length > 0) {\n          context.reportError(new _error.GraphQLError(badValueMessage(node.name.value, argDef.type, (0, _printer.print)(node.value), errors), [node.value]));\n        }\n      }\n      return false;\n    }\n  };\n}","map":{"mappings":[{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/graphql/validation/rules/ArgumentsOfCorrectType.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badValueMessage = badValueMessage;\nexports.ArgumentsOfCorrectType = ArgumentsOfCorrectType;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _isValidLiteralValue = require('../../utilities/isValidLiteralValue');\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction badValueMessage(argName, type, value, verboseErrors) {\n  var message = verboseErrors ? '\\n' + verboseErrors.join('\\n') : '';\n  return 'Argument \"' + argName + '\" has invalid value ' + value + '.' + message;\n}\n\n/**\n * Argument values of correct type\n *\n * A GraphQL document is only valid if all field argument literal values are\n * of the type expected by their position.\n */\nfunction ArgumentsOfCorrectType(context) {\n  return {\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      if (argDef) {\n        var errors = (0, _isValidLiteralValue.isValidLiteralValue)(argDef.type, node.value);\n        if (errors && errors.length > 0) {\n          context.reportError(new _error.GraphQLError(badValueMessage(node.name.value, argDef.type, (0, _printer.print)(node.value), errors), [node.value]));\n        }\n      }\n      return false;\n    }\n  };\n}"},"lineCount":48}},"hash":"47d8f0df35a61f44cceebfe76e5d63a3","cacheData":{"env":{}}}
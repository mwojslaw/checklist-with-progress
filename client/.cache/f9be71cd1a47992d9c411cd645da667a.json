{"dependencies":[{"name":"../jsutils/invariant","loc":{"line":8,"column":25}},{"name":"../jsutils/keyMap","loc":{"line":12,"column":22}},{"name":"../jsutils/keyValMap","loc":{"line":16,"column":25}},{"name":"./buildASTSchema","loc":{"line":20,"column":30}},{"name":"./valueFromAST","loc":{"line":22,"column":28}},{"name":"../error/GraphQLError","loc":{"line":24,"column":28}},{"name":"../type/schema","loc":{"line":26,"column":22}},{"name":"../type/definition","loc":{"line":28,"column":26}},{"name":"../type/directives","loc":{"line":30,"column":26}},{"name":"../type/introspection","loc":{"line":32,"column":29}},{"name":"../type/scalars","loc":{"line":34,"column":23}},{"name":"../language/kinds","loc":{"line":36,"column":21}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendSchema = extendSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _buildASTSchema = require('./buildASTSchema');\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _GraphQLError = require('../error/GraphQLError');\n\nvar _schema = require('../type/schema');\n\nvar _definition = require('../type/definition');\n\nvar _directives = require('../type/directives');\n\nvar _introspection = require('../type/introspection');\n\nvar _scalars = require('../type/scalars');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction extendSchema(schema, documentAST) {\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Must provide valid GraphQLSchema') : void 0;\n\n  !(documentAST && documentAST.kind === Kind.DOCUMENT) ? (0, _invariant2.default)(0, 'Must provide valid Document AST') : void 0;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefinitionMap = Object.create(null);\n  var typeExtensionsMap = Object.create(null);\n\n  // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n  var directiveDefinitions = [];\n\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var def = documentAST.definitions[i];\n    switch (def.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        // Sanity check that none of the defined types conflict with the\n        // schema's existing types.\n        var typeName = def.name.value;\n        if (schema.getType(typeName)) {\n          throw new _GraphQLError.GraphQLError('Type \"' + typeName + '\" already exists in the schema. It cannot also ' + 'be defined in this type definition.', [def]);\n        }\n        typeDefinitionMap[typeName] = def;\n        break;\n      case Kind.TYPE_EXTENSION_DEFINITION:\n        // Sanity check that this type extension exists within the\n        // schema's existing types.\n        var extendedTypeName = def.definition.name.value;\n        var existingType = schema.getType(extendedTypeName);\n        if (!existingType) {\n          throw new _GraphQLError.GraphQLError('Cannot extend type \"' + extendedTypeName + '\" because it does not ' + 'exist in the existing schema.', [def.definition]);\n        }\n        if (!(existingType instanceof _definition.GraphQLObjectType)) {\n          throw new _GraphQLError.GraphQLError('Cannot extend non-object type \"' + extendedTypeName + '\".', [def.definition]);\n        }\n        var extensions = typeExtensionsMap[extendedTypeName];\n        if (extensions) {\n          extensions.push(def);\n        } else {\n          extensions = [def];\n        }\n        typeExtensionsMap[extendedTypeName] = extensions;\n        break;\n      case Kind.DIRECTIVE_DEFINITION:\n        var directiveName = def.name.value;\n        var existingDirective = schema.getDirective(directiveName);\n        if (existingDirective) {\n          throw new _GraphQLError.GraphQLError('Directive \"' + directiveName + '\" already exists in the schema. It ' + 'cannot be redefined.', [def]);\n        }\n        directiveDefinitions.push(def);\n        break;\n    }\n  }\n\n  // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n  if (Object.keys(typeExtensionsMap).length === 0 && Object.keys(typeDefinitionMap).length === 0 && directiveDefinitions.length === 0) {\n    return schema;\n  }\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars and introspection types. All\n  // functions below are inline so that this type def cache is within the scope\n  // of the closure.\n  var typeDefCache = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  // Get the root Query, Mutation, and Subscription object types.\n  var queryType = getTypeFromDef(schema.getQueryType());\n\n  var existingMutationType = schema.getMutationType();\n  var mutationType = existingMutationType ? getTypeFromDef(existingMutationType) : null;\n\n  var existingSubscriptionType = schema.getSubscriptionType();\n  var subscriptionType = existingSubscriptionType ? getTypeFromDef(existingSubscriptionType) : null;\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var typeMap = schema.getTypeMap();\n  var types = Object.keys(typeMap).map(function (typeName) {\n    return getTypeFromDef(typeMap[typeName]);\n  });\n\n  // Do the same with new types, appending to the list of defined types.\n  Object.keys(typeDefinitionMap).forEach(function (typeName) {\n    types.push(getTypeFromAST(typeDefinitionMap[typeName]));\n  });\n\n  // Then produce and return a Schema with these types.\n  return new _schema.GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: getMergedDirectives(),\n    astNode: schema.astNode\n  });\n\n  // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function getMergedDirectives() {\n    var existingDirectives = schema.getDirectives();\n    !existingDirectives ? (0, _invariant2.default)(0, 'schema must have default directives') : void 0;\n\n    var newDirectives = directiveDefinitions.map(function (directiveNode) {\n      return getDirective(directiveNode);\n    });\n    return existingDirectives.concat(newDirectives);\n  }\n\n  function getTypeFromDef(typeDef) {\n    var type = _getNamedType(typeDef.name);\n    !type ? (0, _invariant2.default)(0, 'Missing type from schema') : void 0;\n    return type;\n  }\n\n  function getTypeFromAST(node) {\n    var type = _getNamedType(node.name.value);\n    if (!type) {\n      throw new _GraphQLError.GraphQLError('Unknown type: \"' + node.name.value + '\". Ensure that this type exists ' + 'either in the original schema, or is added in a type definition.', [node]);\n    }\n    return type;\n  }\n\n  function getObjectTypeFromAST(node) {\n    var type = getTypeFromAST(node);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Must be Object type.') : void 0;\n    return type;\n  }\n\n  function getInterfaceTypeFromAST(node) {\n    var type = getTypeFromAST(node);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Must be Interface type.') : void 0;\n    return type;\n  }\n\n  function getInputTypeFromAST(node) {\n    return (0, _definition.assertInputType)(getTypeFromAST(node));\n  }\n\n  function getOutputTypeFromAST(node) {\n    return (0, _definition.assertOutputType)(getTypeFromAST(node));\n  }\n\n  // Given a name, returns a type from either the existing schema or an\n  // added type.\n  function _getNamedType(typeName) {\n    var cachedTypeDef = typeDefCache[typeName];\n    if (cachedTypeDef) {\n      return cachedTypeDef;\n    }\n\n    var existingType = schema.getType(typeName);\n    if (existingType) {\n      var typeDef = extendType(existingType);\n      typeDefCache[typeName] = typeDef;\n      return typeDef;\n    }\n\n    var typeNode = typeDefinitionMap[typeName];\n    if (typeNode) {\n      var _typeDef = buildType(typeNode);\n      typeDefCache[typeName] = _typeDef;\n      return _typeDef;\n    }\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function extendType(type) {\n    if (type instanceof _definition.GraphQLObjectType) {\n      return extendObjectType(type);\n    }\n    if (type instanceof _definition.GraphQLInterfaceType) {\n      return extendInterfaceType(type);\n    }\n    if (type instanceof _definition.GraphQLUnionType) {\n      return extendUnionType(type);\n    }\n    return type;\n  }\n\n  function extendObjectType(type) {\n    var name = type.name;\n    var extensionASTNodes = type.extensionASTNodes;\n    if (typeExtensionsMap[name]) {\n      extensionASTNodes = extensionASTNodes.concat(typeExtensionsMap[name]);\n    }\n\n    return new _definition.GraphQLObjectType({\n      name: name,\n      description: type.description,\n      interfaces: function interfaces() {\n        return extendImplementedInterfaces(type);\n      },\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      isTypeOf: type.isTypeOf\n    });\n  }\n\n  function extendInterfaceType(type) {\n    return new _definition.GraphQLInterfaceType({\n      name: type.name,\n      description: type.description,\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendUnionType(type) {\n    return new _definition.GraphQLUnionType({\n      name: type.name,\n      description: type.description,\n      types: type.getTypes().map(getTypeFromDef),\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendImplementedInterfaces(type) {\n    var interfaces = type.getInterfaces().map(getTypeFromDef);\n\n    // If there are any extensions to the interfaces, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.definition.interfaces.forEach(function (namedType) {\n          var interfaceName = namedType.name.value;\n          if (interfaces.some(function (def) {\n            return def.name === interfaceName;\n          })) {\n            throw new _GraphQLError.GraphQLError('Type \"' + type.name + '\" already implements \"' + interfaceName + '\". ' + 'It cannot also be implemented in this type extension.', [namedType]);\n          }\n          interfaces.push(getInterfaceTypeFromAST(namedType));\n        });\n      });\n    }\n\n    return interfaces;\n  }\n\n  function extendFieldMap(type) {\n    var newFieldMap = Object.create(null);\n    var oldFieldMap = type.getFields();\n    Object.keys(oldFieldMap).forEach(function (fieldName) {\n      var field = oldFieldMap[fieldName];\n      newFieldMap[fieldName] = {\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        type: extendFieldType(field.type),\n        args: (0, _keyMap2.default)(field.args, function (arg) {\n          return arg.name;\n        }),\n        astNode: field.astNode,\n        resolve: field.resolve\n      };\n    });\n\n    // If there are any extensions to the fields, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.definition.fields.forEach(function (field) {\n          var fieldName = field.name.value;\n          if (oldFieldMap[fieldName]) {\n            throw new _GraphQLError.GraphQLError('Field \"' + type.name + '.' + fieldName + '\" already exists in the ' + 'schema. It cannot also be defined in this type extension.', [field]);\n          }\n          newFieldMap[fieldName] = {\n            description: (0, _buildASTSchema.getDescription)(field),\n            type: buildOutputFieldType(field.type),\n            args: buildInputValues(field.arguments),\n            deprecationReason: (0, _buildASTSchema.getDeprecationReason)(field),\n            astNode: field\n          };\n        });\n      });\n    }\n\n    return newFieldMap;\n  }\n\n  function extendFieldType(typeDef) {\n    if (typeDef instanceof _definition.GraphQLList) {\n      return new _definition.GraphQLList(extendFieldType(typeDef.ofType));\n    }\n    if (typeDef instanceof _definition.GraphQLNonNull) {\n      return new _definition.GraphQLNonNull(extendFieldType(typeDef.ofType));\n    }\n    return getTypeFromDef(typeDef);\n  }\n\n  function buildType(typeNode) {\n    switch (typeNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        return buildObjectType(typeNode);\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        return buildInterfaceType(typeNode);\n      case Kind.UNION_TYPE_DEFINITION:\n        return buildUnionType(typeNode);\n      case Kind.SCALAR_TYPE_DEFINITION:\n        return buildScalarType(typeNode);\n      case Kind.ENUM_TYPE_DEFINITION:\n        return buildEnumType(typeNode);\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        return buildInputObjectType(typeNode);\n    }\n    throw new TypeError('Unknown type kind ' + typeNode.kind);\n  }\n\n  function buildObjectType(typeNode) {\n    return new _definition.GraphQLObjectType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      interfaces: function interfaces() {\n        return buildImplementedInterfaces(typeNode);\n      },\n      fields: function fields() {\n        return buildFieldMap(typeNode);\n      },\n      astNode: typeNode\n    });\n  }\n\n  function buildInterfaceType(typeNode) {\n    return new _definition.GraphQLInterfaceType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      fields: function fields() {\n        return buildFieldMap(typeNode);\n      },\n      astNode: typeNode,\n      resolveType: cannotExecuteExtendedSchema\n    });\n  }\n\n  function buildUnionType(typeNode) {\n    return new _definition.GraphQLUnionType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      types: typeNode.types.map(getObjectTypeFromAST),\n      astNode: typeNode,\n      resolveType: cannotExecuteExtendedSchema\n    });\n  }\n\n  function buildScalarType(typeNode) {\n    return new _definition.GraphQLScalarType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      astNode: typeNode,\n      serialize: function serialize(id) {\n        return id;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function buildEnumType(typeNode) {\n    return new _definition.GraphQLEnumType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      values: (0, _keyValMap2.default)(typeNode.values, function (enumValue) {\n        return enumValue.name.value;\n      }, function (enumValue) {\n        return {\n          description: (0, _buildASTSchema.getDescription)(enumValue),\n          deprecationReason: (0, _buildASTSchema.getDeprecationReason)(enumValue),\n          astNode: enumValue\n        };\n      }),\n      astNode: typeNode\n    });\n  }\n\n  function buildInputObjectType(typeNode) {\n    return new _definition.GraphQLInputObjectType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      fields: function fields() {\n        return buildInputValues(typeNode.fields);\n      },\n      astNode: typeNode\n    });\n  }\n\n  function getDirective(directiveNode) {\n    return new _directives.GraphQLDirective({\n      name: directiveNode.name.value,\n      locations: directiveNode.locations.map(function (node) {\n        return node.value;\n      }),\n      args: directiveNode.arguments && buildInputValues(directiveNode.arguments),\n      astNode: directiveNode\n    });\n  }\n\n  function buildImplementedInterfaces(typeNode) {\n    return typeNode.interfaces && typeNode.interfaces.map(getInterfaceTypeFromAST);\n  }\n\n  function buildFieldMap(typeNode) {\n    return (0, _keyValMap2.default)(typeNode.fields, function (field) {\n      return field.name.value;\n    }, function (field) {\n      return {\n        type: buildOutputFieldType(field.type),\n        description: (0, _buildASTSchema.getDescription)(field),\n        args: buildInputValues(field.arguments),\n        deprecationReason: (0, _buildASTSchema.getDeprecationReason)(field),\n        astNode: field\n      };\n    });\n  }\n\n  function buildInputValues(values) {\n    return (0, _keyValMap2.default)(values, function (value) {\n      return value.name.value;\n    }, function (value) {\n      var type = buildInputFieldType(value.type);\n      return {\n        type: type,\n        description: (0, _buildASTSchema.getDescription)(value),\n        defaultValue: (0, _valueFromAST.valueFromAST)(value.defaultValue, type),\n        astNode: value\n      };\n    });\n  }\n\n  function buildInputFieldType(typeNode) {\n    if (typeNode.kind === Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(buildInputFieldType(typeNode.type));\n    }\n    if (typeNode.kind === Kind.NON_NULL_TYPE) {\n      var nullableType = buildInputFieldType(typeNode.type);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'Must be nullable') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getInputTypeFromAST(typeNode);\n  }\n\n  function buildOutputFieldType(typeNode) {\n    if (typeNode.kind === Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(buildOutputFieldType(typeNode.type));\n    }\n    if (typeNode.kind === Kind.NON_NULL_TYPE) {\n      var nullableType = buildOutputFieldType(typeNode.type);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'Must be nullable') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getOutputTypeFromAST(typeNode);\n  }\n}\n\nfunction cannotExecuteExtendedSchema() {\n  throw new Error('Extended Schema cannot use Interface or Union types for execution.');\n}","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/utilities/extendSchema.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendSchema = extendSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _keyMap = require('../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _buildASTSchema = require('./buildASTSchema');\n\nvar _valueFromAST = require('./valueFromAST');\n\nvar _GraphQLError = require('../error/GraphQLError');\n\nvar _schema = require('../type/schema');\n\nvar _definition = require('../type/definition');\n\nvar _directives = require('../type/directives');\n\nvar _introspection = require('../type/introspection');\n\nvar _scalars = require('../type/scalars');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction extendSchema(schema, documentAST) {\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Must provide valid GraphQLSchema') : void 0;\n\n  !(documentAST && documentAST.kind === Kind.DOCUMENT) ? (0, _invariant2.default)(0, 'Must provide valid Document AST') : void 0;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefinitionMap = Object.create(null);\n  var typeExtensionsMap = Object.create(null);\n\n  // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n  var directiveDefinitions = [];\n\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var def = documentAST.definitions[i];\n    switch (def.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        // Sanity check that none of the defined types conflict with the\n        // schema's existing types.\n        var typeName = def.name.value;\n        if (schema.getType(typeName)) {\n          throw new _GraphQLError.GraphQLError('Type \"' + typeName + '\" already exists in the schema. It cannot also ' + 'be defined in this type definition.', [def]);\n        }\n        typeDefinitionMap[typeName] = def;\n        break;\n      case Kind.TYPE_EXTENSION_DEFINITION:\n        // Sanity check that this type extension exists within the\n        // schema's existing types.\n        var extendedTypeName = def.definition.name.value;\n        var existingType = schema.getType(extendedTypeName);\n        if (!existingType) {\n          throw new _GraphQLError.GraphQLError('Cannot extend type \"' + extendedTypeName + '\" because it does not ' + 'exist in the existing schema.', [def.definition]);\n        }\n        if (!(existingType instanceof _definition.GraphQLObjectType)) {\n          throw new _GraphQLError.GraphQLError('Cannot extend non-object type \"' + extendedTypeName + '\".', [def.definition]);\n        }\n        var extensions = typeExtensionsMap[extendedTypeName];\n        if (extensions) {\n          extensions.push(def);\n        } else {\n          extensions = [def];\n        }\n        typeExtensionsMap[extendedTypeName] = extensions;\n        break;\n      case Kind.DIRECTIVE_DEFINITION:\n        var directiveName = def.name.value;\n        var existingDirective = schema.getDirective(directiveName);\n        if (existingDirective) {\n          throw new _GraphQLError.GraphQLError('Directive \"' + directiveName + '\" already exists in the schema. It ' + 'cannot be redefined.', [def]);\n        }\n        directiveDefinitions.push(def);\n        break;\n    }\n  }\n\n  // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n  if (Object.keys(typeExtensionsMap).length === 0 && Object.keys(typeDefinitionMap).length === 0 && directiveDefinitions.length === 0) {\n    return schema;\n  }\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars and introspection types. All\n  // functions below are inline so that this type def cache is within the scope\n  // of the closure.\n  var typeDefCache = {\n    String: _scalars.GraphQLString,\n    Int: _scalars.GraphQLInt,\n    Float: _scalars.GraphQLFloat,\n    Boolean: _scalars.GraphQLBoolean,\n    ID: _scalars.GraphQLID,\n    __Schema: _introspection.__Schema,\n    __Directive: _introspection.__Directive,\n    __DirectiveLocation: _introspection.__DirectiveLocation,\n    __Type: _introspection.__Type,\n    __Field: _introspection.__Field,\n    __InputValue: _introspection.__InputValue,\n    __EnumValue: _introspection.__EnumValue,\n    __TypeKind: _introspection.__TypeKind\n  };\n\n  // Get the root Query, Mutation, and Subscription object types.\n  var queryType = getTypeFromDef(schema.getQueryType());\n\n  var existingMutationType = schema.getMutationType();\n  var mutationType = existingMutationType ? getTypeFromDef(existingMutationType) : null;\n\n  var existingSubscriptionType = schema.getSubscriptionType();\n  var subscriptionType = existingSubscriptionType ? getTypeFromDef(existingSubscriptionType) : null;\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var typeMap = schema.getTypeMap();\n  var types = Object.keys(typeMap).map(function (typeName) {\n    return getTypeFromDef(typeMap[typeName]);\n  });\n\n  // Do the same with new types, appending to the list of defined types.\n  Object.keys(typeDefinitionMap).forEach(function (typeName) {\n    types.push(getTypeFromAST(typeDefinitionMap[typeName]));\n  });\n\n  // Then produce and return a Schema with these types.\n  return new _schema.GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: getMergedDirectives(),\n    astNode: schema.astNode\n  });\n\n  // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function getMergedDirectives() {\n    var existingDirectives = schema.getDirectives();\n    !existingDirectives ? (0, _invariant2.default)(0, 'schema must have default directives') : void 0;\n\n    var newDirectives = directiveDefinitions.map(function (directiveNode) {\n      return getDirective(directiveNode);\n    });\n    return existingDirectives.concat(newDirectives);\n  }\n\n  function getTypeFromDef(typeDef) {\n    var type = _getNamedType(typeDef.name);\n    !type ? (0, _invariant2.default)(0, 'Missing type from schema') : void 0;\n    return type;\n  }\n\n  function getTypeFromAST(node) {\n    var type = _getNamedType(node.name.value);\n    if (!type) {\n      throw new _GraphQLError.GraphQLError('Unknown type: \"' + node.name.value + '\". Ensure that this type exists ' + 'either in the original schema, or is added in a type definition.', [node]);\n    }\n    return type;\n  }\n\n  function getObjectTypeFromAST(node) {\n    var type = getTypeFromAST(node);\n    !(type instanceof _definition.GraphQLObjectType) ? (0, _invariant2.default)(0, 'Must be Object type.') : void 0;\n    return type;\n  }\n\n  function getInterfaceTypeFromAST(node) {\n    var type = getTypeFromAST(node);\n    !(type instanceof _definition.GraphQLInterfaceType) ? (0, _invariant2.default)(0, 'Must be Interface type.') : void 0;\n    return type;\n  }\n\n  function getInputTypeFromAST(node) {\n    return (0, _definition.assertInputType)(getTypeFromAST(node));\n  }\n\n  function getOutputTypeFromAST(node) {\n    return (0, _definition.assertOutputType)(getTypeFromAST(node));\n  }\n\n  // Given a name, returns a type from either the existing schema or an\n  // added type.\n  function _getNamedType(typeName) {\n    var cachedTypeDef = typeDefCache[typeName];\n    if (cachedTypeDef) {\n      return cachedTypeDef;\n    }\n\n    var existingType = schema.getType(typeName);\n    if (existingType) {\n      var typeDef = extendType(existingType);\n      typeDefCache[typeName] = typeDef;\n      return typeDef;\n    }\n\n    var typeNode = typeDefinitionMap[typeName];\n    if (typeNode) {\n      var _typeDef = buildType(typeNode);\n      typeDefCache[typeName] = _typeDef;\n      return _typeDef;\n    }\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function extendType(type) {\n    if (type instanceof _definition.GraphQLObjectType) {\n      return extendObjectType(type);\n    }\n    if (type instanceof _definition.GraphQLInterfaceType) {\n      return extendInterfaceType(type);\n    }\n    if (type instanceof _definition.GraphQLUnionType) {\n      return extendUnionType(type);\n    }\n    return type;\n  }\n\n  function extendObjectType(type) {\n    var name = type.name;\n    var extensionASTNodes = type.extensionASTNodes;\n    if (typeExtensionsMap[name]) {\n      extensionASTNodes = extensionASTNodes.concat(typeExtensionsMap[name]);\n    }\n\n    return new _definition.GraphQLObjectType({\n      name: name,\n      description: type.description,\n      interfaces: function interfaces() {\n        return extendImplementedInterfaces(type);\n      },\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      isTypeOf: type.isTypeOf\n    });\n  }\n\n  function extendInterfaceType(type) {\n    return new _definition.GraphQLInterfaceType({\n      name: type.name,\n      description: type.description,\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendUnionType(type) {\n    return new _definition.GraphQLUnionType({\n      name: type.name,\n      description: type.description,\n      types: type.getTypes().map(getTypeFromDef),\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendImplementedInterfaces(type) {\n    var interfaces = type.getInterfaces().map(getTypeFromDef);\n\n    // If there are any extensions to the interfaces, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.definition.interfaces.forEach(function (namedType) {\n          var interfaceName = namedType.name.value;\n          if (interfaces.some(function (def) {\n            return def.name === interfaceName;\n          })) {\n            throw new _GraphQLError.GraphQLError('Type \"' + type.name + '\" already implements \"' + interfaceName + '\". ' + 'It cannot also be implemented in this type extension.', [namedType]);\n          }\n          interfaces.push(getInterfaceTypeFromAST(namedType));\n        });\n      });\n    }\n\n    return interfaces;\n  }\n\n  function extendFieldMap(type) {\n    var newFieldMap = Object.create(null);\n    var oldFieldMap = type.getFields();\n    Object.keys(oldFieldMap).forEach(function (fieldName) {\n      var field = oldFieldMap[fieldName];\n      newFieldMap[fieldName] = {\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        type: extendFieldType(field.type),\n        args: (0, _keyMap2.default)(field.args, function (arg) {\n          return arg.name;\n        }),\n        astNode: field.astNode,\n        resolve: field.resolve\n      };\n    });\n\n    // If there are any extensions to the fields, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.definition.fields.forEach(function (field) {\n          var fieldName = field.name.value;\n          if (oldFieldMap[fieldName]) {\n            throw new _GraphQLError.GraphQLError('Field \"' + type.name + '.' + fieldName + '\" already exists in the ' + 'schema. It cannot also be defined in this type extension.', [field]);\n          }\n          newFieldMap[fieldName] = {\n            description: (0, _buildASTSchema.getDescription)(field),\n            type: buildOutputFieldType(field.type),\n            args: buildInputValues(field.arguments),\n            deprecationReason: (0, _buildASTSchema.getDeprecationReason)(field),\n            astNode: field\n          };\n        });\n      });\n    }\n\n    return newFieldMap;\n  }\n\n  function extendFieldType(typeDef) {\n    if (typeDef instanceof _definition.GraphQLList) {\n      return new _definition.GraphQLList(extendFieldType(typeDef.ofType));\n    }\n    if (typeDef instanceof _definition.GraphQLNonNull) {\n      return new _definition.GraphQLNonNull(extendFieldType(typeDef.ofType));\n    }\n    return getTypeFromDef(typeDef);\n  }\n\n  function buildType(typeNode) {\n    switch (typeNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        return buildObjectType(typeNode);\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        return buildInterfaceType(typeNode);\n      case Kind.UNION_TYPE_DEFINITION:\n        return buildUnionType(typeNode);\n      case Kind.SCALAR_TYPE_DEFINITION:\n        return buildScalarType(typeNode);\n      case Kind.ENUM_TYPE_DEFINITION:\n        return buildEnumType(typeNode);\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        return buildInputObjectType(typeNode);\n    }\n    throw new TypeError('Unknown type kind ' + typeNode.kind);\n  }\n\n  function buildObjectType(typeNode) {\n    return new _definition.GraphQLObjectType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      interfaces: function interfaces() {\n        return buildImplementedInterfaces(typeNode);\n      },\n      fields: function fields() {\n        return buildFieldMap(typeNode);\n      },\n      astNode: typeNode\n    });\n  }\n\n  function buildInterfaceType(typeNode) {\n    return new _definition.GraphQLInterfaceType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      fields: function fields() {\n        return buildFieldMap(typeNode);\n      },\n      astNode: typeNode,\n      resolveType: cannotExecuteExtendedSchema\n    });\n  }\n\n  function buildUnionType(typeNode) {\n    return new _definition.GraphQLUnionType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      types: typeNode.types.map(getObjectTypeFromAST),\n      astNode: typeNode,\n      resolveType: cannotExecuteExtendedSchema\n    });\n  }\n\n  function buildScalarType(typeNode) {\n    return new _definition.GraphQLScalarType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      astNode: typeNode,\n      serialize: function serialize(id) {\n        return id;\n      },\n      // Note: validation calls the parse functions to determine if a\n      // literal value is correct. Returning null would cause use of custom\n      // scalars to always fail validation. Returning false causes them to\n      // always pass validation.\n      parseValue: function parseValue() {\n        return false;\n      },\n      parseLiteral: function parseLiteral() {\n        return false;\n      }\n    });\n  }\n\n  function buildEnumType(typeNode) {\n    return new _definition.GraphQLEnumType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      values: (0, _keyValMap2.default)(typeNode.values, function (enumValue) {\n        return enumValue.name.value;\n      }, function (enumValue) {\n        return {\n          description: (0, _buildASTSchema.getDescription)(enumValue),\n          deprecationReason: (0, _buildASTSchema.getDeprecationReason)(enumValue),\n          astNode: enumValue\n        };\n      }),\n      astNode: typeNode\n    });\n  }\n\n  function buildInputObjectType(typeNode) {\n    return new _definition.GraphQLInputObjectType({\n      name: typeNode.name.value,\n      description: (0, _buildASTSchema.getDescription)(typeNode),\n      fields: function fields() {\n        return buildInputValues(typeNode.fields);\n      },\n      astNode: typeNode\n    });\n  }\n\n  function getDirective(directiveNode) {\n    return new _directives.GraphQLDirective({\n      name: directiveNode.name.value,\n      locations: directiveNode.locations.map(function (node) {\n        return node.value;\n      }),\n      args: directiveNode.arguments && buildInputValues(directiveNode.arguments),\n      astNode: directiveNode\n    });\n  }\n\n  function buildImplementedInterfaces(typeNode) {\n    return typeNode.interfaces && typeNode.interfaces.map(getInterfaceTypeFromAST);\n  }\n\n  function buildFieldMap(typeNode) {\n    return (0, _keyValMap2.default)(typeNode.fields, function (field) {\n      return field.name.value;\n    }, function (field) {\n      return {\n        type: buildOutputFieldType(field.type),\n        description: (0, _buildASTSchema.getDescription)(field),\n        args: buildInputValues(field.arguments),\n        deprecationReason: (0, _buildASTSchema.getDeprecationReason)(field),\n        astNode: field\n      };\n    });\n  }\n\n  function buildInputValues(values) {\n    return (0, _keyValMap2.default)(values, function (value) {\n      return value.name.value;\n    }, function (value) {\n      var type = buildInputFieldType(value.type);\n      return {\n        type: type,\n        description: (0, _buildASTSchema.getDescription)(value),\n        defaultValue: (0, _valueFromAST.valueFromAST)(value.defaultValue, type),\n        astNode: value\n      };\n    });\n  }\n\n  function buildInputFieldType(typeNode) {\n    if (typeNode.kind === Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(buildInputFieldType(typeNode.type));\n    }\n    if (typeNode.kind === Kind.NON_NULL_TYPE) {\n      var nullableType = buildInputFieldType(typeNode.type);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'Must be nullable') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getInputTypeFromAST(typeNode);\n  }\n\n  function buildOutputFieldType(typeNode) {\n    if (typeNode.kind === Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(buildOutputFieldType(typeNode.type));\n    }\n    if (typeNode.kind === Kind.NON_NULL_TYPE) {\n      var nullableType = buildOutputFieldType(typeNode.type);\n      !!(nullableType instanceof _definition.GraphQLNonNull) ? (0, _invariant2.default)(0, 'Must be nullable') : void 0;\n      return new _definition.GraphQLNonNull(nullableType);\n    }\n    return getOutputTypeFromAST(typeNode);\n  }\n}\n\nfunction cannotExecuteExtendedSchema() {\n  throw new Error('Extended Schema cannot use Interface or Union types for execution.');\n}"},"lineCount":557}},"hash":"464efd179de3eb6437fe109cc5c03744","cacheData":{"env":{}}}
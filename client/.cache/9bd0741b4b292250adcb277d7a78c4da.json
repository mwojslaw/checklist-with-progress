{"dependencies":[{"name":"graphql","loc":{"line":3,"column":24}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar TypeRegistry = /** @class */ (function () {\n    function TypeRegistry() {\n        this.types = {};\n        this.schemaByField = {\n            query: {},\n            mutation: {},\n            subscription: {},\n        };\n        this.fragmentReplacements = {};\n    }\n    TypeRegistry.prototype.getSchemaByField = function (operation, fieldName) {\n        return this.schemaByField[operation][fieldName];\n    };\n    TypeRegistry.prototype.getAllTypes = function () {\n        var _this = this;\n        return Object.keys(this.types).map(function (name) { return _this.types[name]; });\n    };\n    TypeRegistry.prototype.getType = function (name) {\n        if (!this.types[name]) {\n            throw new Error(\"No such type: \" + name);\n        }\n        return this.types[name];\n    };\n    TypeRegistry.prototype.resolveType = function (type) {\n        if (type instanceof graphql_1.GraphQLList) {\n            return new graphql_1.GraphQLList(this.resolveType(type.ofType));\n        }\n        else if (type instanceof graphql_1.GraphQLNonNull) {\n            return new graphql_1.GraphQLNonNull(this.resolveType(type.ofType));\n        }\n        else if (graphql_1.isNamedType(type)) {\n            return this.getType(graphql_1.getNamedType(type).name);\n        }\n        else {\n            return type;\n        }\n    };\n    TypeRegistry.prototype.addSchema = function (schema) {\n        var _this = this;\n        var query = schema.getQueryType();\n        if (query) {\n            var fieldNames = Object.keys(query.getFields());\n            fieldNames.forEach(function (field) {\n                _this.schemaByField.query[field] = schema;\n            });\n        }\n        var mutation = schema.getMutationType();\n        if (mutation) {\n            var fieldNames = Object.keys(mutation.getFields());\n            fieldNames.forEach(function (field) {\n                _this.schemaByField.mutation[field] = schema;\n            });\n        }\n        var subscription = schema.getSubscriptionType();\n        if (subscription) {\n            var fieldNames = Object.keys(subscription.getFields());\n            fieldNames.forEach(function (field) {\n                _this.schemaByField.subscription[field] = schema;\n            });\n        }\n    };\n    TypeRegistry.prototype.addType = function (name, type, onTypeConflict) {\n        if (this.types[name]) {\n            if (onTypeConflict) {\n                type = onTypeConflict(this.types[name], type);\n            }\n            else {\n                throw new Error(\"Type name conflict: \" + name);\n            }\n        }\n        this.types[name] = type;\n    };\n    TypeRegistry.prototype.addFragment = function (typeName, fieldName, fragment) {\n        if (!this.fragmentReplacements[typeName]) {\n            this.fragmentReplacements[typeName] = {};\n        }\n        this.fragmentReplacements[typeName][fieldName] = parseFragmentToInlineFragment(fragment);\n    };\n    return TypeRegistry;\n}());\nexports.default = TypeRegistry;\nfunction parseFragmentToInlineFragment(definitions) {\n    var document = graphql_1.parse(definitions);\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n            return {\n                kind: graphql_1.Kind.INLINE_FRAGMENT,\n                typeCondition: definition.typeCondition,\n                selectionSet: definition.selectionSet,\n            };\n        }\n    }\n    throw new Error('Could not parse fragment');\n}\n//# sourceMappingURL=TypeRegistry.js.map","map":{"mappings":[{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/TypeRegistry.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}}],"sources":{"node_modules/graphql-tools/dist/stitching/TypeRegistry.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar TypeRegistry = /** @class */ (function () {\n    function TypeRegistry() {\n        this.types = {};\n        this.schemaByField = {\n            query: {},\n            mutation: {},\n            subscription: {},\n        };\n        this.fragmentReplacements = {};\n    }\n    TypeRegistry.prototype.getSchemaByField = function (operation, fieldName) {\n        return this.schemaByField[operation][fieldName];\n    };\n    TypeRegistry.prototype.getAllTypes = function () {\n        var _this = this;\n        return Object.keys(this.types).map(function (name) { return _this.types[name]; });\n    };\n    TypeRegistry.prototype.getType = function (name) {\n        if (!this.types[name]) {\n            throw new Error(\"No such type: \" + name);\n        }\n        return this.types[name];\n    };\n    TypeRegistry.prototype.resolveType = function (type) {\n        if (type instanceof graphql_1.GraphQLList) {\n            return new graphql_1.GraphQLList(this.resolveType(type.ofType));\n        }\n        else if (type instanceof graphql_1.GraphQLNonNull) {\n            return new graphql_1.GraphQLNonNull(this.resolveType(type.ofType));\n        }\n        else if (graphql_1.isNamedType(type)) {\n            return this.getType(graphql_1.getNamedType(type).name);\n        }\n        else {\n            return type;\n        }\n    };\n    TypeRegistry.prototype.addSchema = function (schema) {\n        var _this = this;\n        var query = schema.getQueryType();\n        if (query) {\n            var fieldNames = Object.keys(query.getFields());\n            fieldNames.forEach(function (field) {\n                _this.schemaByField.query[field] = schema;\n            });\n        }\n        var mutation = schema.getMutationType();\n        if (mutation) {\n            var fieldNames = Object.keys(mutation.getFields());\n            fieldNames.forEach(function (field) {\n                _this.schemaByField.mutation[field] = schema;\n            });\n        }\n        var subscription = schema.getSubscriptionType();\n        if (subscription) {\n            var fieldNames = Object.keys(subscription.getFields());\n            fieldNames.forEach(function (field) {\n                _this.schemaByField.subscription[field] = schema;\n            });\n        }\n    };\n    TypeRegistry.prototype.addType = function (name, type, onTypeConflict) {\n        if (this.types[name]) {\n            if (onTypeConflict) {\n                type = onTypeConflict(this.types[name], type);\n            }\n            else {\n                throw new Error(\"Type name conflict: \" + name);\n            }\n        }\n        this.types[name] = type;\n    };\n    TypeRegistry.prototype.addFragment = function (typeName, fieldName, fragment) {\n        if (!this.fragmentReplacements[typeName]) {\n            this.fragmentReplacements[typeName] = {};\n        }\n        this.fragmentReplacements[typeName][fieldName] = parseFragmentToInlineFragment(fragment);\n    };\n    return TypeRegistry;\n}());\nexports.default = TypeRegistry;\nfunction parseFragmentToInlineFragment(definitions) {\n    var document = graphql_1.parse(definitions);\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n            return {\n                kind: graphql_1.Kind.INLINE_FRAGMENT,\n                typeCondition: definition.typeCondition,\n                selectionSet: definition.selectionSet,\n            };\n        }\n    }\n    throw new Error('Could not parse fragment');\n}\n//# sourceMappingURL=TypeRegistry.js.map"},"lineCount":99}},"hash":"9fbe29015e41373272ce16f8687a5393","cacheData":{"env":{}}}
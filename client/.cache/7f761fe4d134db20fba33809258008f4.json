{"dependencies":[{"name":"../jsutils/invariant","loc":{"line":9,"column":25}},{"name":"../error","loc":{"line":13,"column":21}},{"name":"../language/visitor","loc":{"line":15,"column":23}},{"name":"../language/kinds","loc":{"line":17,"column":21}},{"name":"../type/schema","loc":{"line":21,"column":22}},{"name":"../utilities/TypeInfo","loc":{"line":23,"column":24}},{"name":"./specifiedRules","loc":{"line":25,"column":30}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidationContext = undefined;\nexports.validate = validate;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nvar _specifiedRules = require('./specifiedRules');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(schema, ast, rules, typeInfo) {\n  !schema ? (0, _invariant2.default)(0, 'Must provide schema') : void 0;\n  !ast ? (0, _invariant2.default)(0, 'Must provide document') : void 0;\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Schema must be an instance of GraphQLSchema. Also ensure that there are ' + 'not multiple versions of GraphQL installed in your node_modules directory.') : void 0;\n  return visitUsingRules(schema, typeInfo || new _TypeInfo.TypeInfo(schema), ast, rules || _specifiedRules.specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new ValidationContext(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitWithTypeInfo)(typeInfo, (0, _visitor.visitInParallel)(visitors)));\n  return context.getErrors();\n}\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = exports.ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(node, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/validation/validate.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidationContext = undefined;\nexports.validate = validate;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nvar _specifiedRules = require('./specifiedRules');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(schema, ast, rules, typeInfo) {\n  !schema ? (0, _invariant2.default)(0, 'Must provide schema') : void 0;\n  !ast ? (0, _invariant2.default)(0, 'Must provide document') : void 0;\n  !(schema instanceof _schema.GraphQLSchema) ? (0, _invariant2.default)(0, 'Schema must be an instance of GraphQLSchema. Also ensure that there are ' + 'not multiple versions of GraphQL installed in your node_modules directory.') : void 0;\n  return visitUsingRules(schema, typeInfo || new _TypeInfo.TypeInfo(schema), ast, rules || _specifiedRules.specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new ValidationContext(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitWithTypeInfo)(typeInfo, (0, _visitor.visitInParallel)(visitors)));\n  return context.getErrors();\n}\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = exports.ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(node, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();"},"lineCount":232}},"hash":"31efa3bd2c9c09db176dd4cb3eb810c9","cacheData":{"env":{}}}
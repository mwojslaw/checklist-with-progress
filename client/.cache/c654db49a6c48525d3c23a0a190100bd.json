{"dependencies":[{"name":"graphql","loc":{"line":11,"column":24}},{"name":"./TypeRegistry","loc":{"line":12,"column":29}},{"name":"../isEmptyObject","loc":{"line":13,"column":30}},{"name":"../schemaGenerator","loc":{"line":14,"column":32}},{"name":"./schemaRecreation","loc":{"line":15,"column":33}},{"name":"./delegateToSchema","loc":{"line":16,"column":33}},{"name":"./typeFromAST","loc":{"line":17,"column":28}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar TypeRegistry_1 = require(\"./TypeRegistry\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar schemaGenerator_1 = require(\"../schemaGenerator\");\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\nvar delegateToSchema_1 = require(\"./delegateToSchema\");\nvar typeFromAST_1 = require(\"./typeFromAST\");\nvar backcompatOptions = { commentDescriptions: true };\nfunction mergeSchemas(_a) {\n    var schemas = _a.schemas, onTypeConflict = _a.onTypeConflict, resolvers = _a.resolvers;\n    if (!onTypeConflict) {\n        onTypeConflict = defaultOnTypeConflict;\n    }\n    var queryFields = {};\n    var mutationFields = {};\n    var subscriptionFields = {};\n    var typeRegistry = new TypeRegistry_1.default();\n    var mergeInfo = createMergeInfo(typeRegistry);\n    var actualSchemas = [];\n    var typeFragments = [];\n    var extensions = [];\n    var fullResolvers = {};\n    schemas.forEach(function (schema) {\n        if (schema instanceof graphql_1.GraphQLSchema) {\n            actualSchemas.push(schema);\n        }\n        else if (typeof schema === 'string') {\n            var parsedSchemaDocument = graphql_1.parse(schema);\n            try {\n                // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n                var actualSchema = graphql_1.buildASTSchema(parsedSchemaDocument, backcompatOptions);\n                if (actualSchema.getQueryType()) {\n                    actualSchemas.push(actualSchema);\n                }\n            }\n            catch (e) {\n                typeFragments.push(parsedSchemaDocument);\n            }\n            parsedSchemaDocument = schemaGenerator_1.extractExtensionDefinitions(parsedSchemaDocument);\n            if (parsedSchemaDocument.definitions.length > 0) {\n                extensions.push(parsedSchemaDocument);\n            }\n        }\n    });\n    actualSchemas.forEach(function (schema) {\n        typeRegistry.addSchema(schema);\n        var queryType = schema.getQueryType();\n        var mutationType = schema.getMutationType();\n        var subscriptionType = schema.getSubscriptionType();\n        var typeMap = schema.getTypeMap();\n        Object.keys(typeMap).forEach(function (typeName) {\n            var type = typeMap[typeName];\n            if (graphql_1.isNamedType(type) &&\n                graphql_1.getNamedType(type).name.slice(0, 2) !== '__' &&\n                type !== queryType &&\n                type !== mutationType &&\n                type !== subscriptionType) {\n                var newType = void 0;\n                if (graphql_1.isCompositeType(type) || type instanceof graphql_1.GraphQLInputObjectType) {\n                    newType = schemaRecreation_1.recreateCompositeType(schema, type, typeRegistry);\n                }\n                else {\n                    newType = graphql_1.getNamedType(type);\n                }\n                if (newType instanceof graphql_1.GraphQLObjectType) {\n                    delete newType.isTypeOf;\n                }\n                typeRegistry.addType(newType.name, newType, onTypeConflict);\n            }\n        });\n        Object.keys(queryType.getFields()).forEach(function (name) {\n            if (!fullResolvers.Query) {\n                fullResolvers.Query = {};\n            }\n            fullResolvers.Query[name] = createDelegatingResolver(mergeInfo, 'query', name);\n        });\n        queryFields = __assign({}, queryFields, queryType.getFields());\n        if (mutationType) {\n            if (!fullResolvers.Mutation) {\n                fullResolvers.Mutation = {};\n            }\n            Object.keys(mutationType.getFields()).forEach(function (name) {\n                fullResolvers.Mutation[name] = createDelegatingResolver(mergeInfo, 'mutation', name);\n            });\n            mutationFields = __assign({}, mutationFields, mutationType.getFields());\n        }\n        if (subscriptionType) {\n            if (!fullResolvers.Subscription) {\n                fullResolvers.Subscription = {};\n            }\n            Object.keys(subscriptionType.getFields()).forEach(function (name) {\n                fullResolvers.Subscription[name] = {\n                    subscribe: createDelegatingResolver(mergeInfo, 'subscription', name),\n                };\n            });\n            subscriptionFields = __assign({}, subscriptionFields, subscriptionType.getFields());\n        }\n    });\n    typeFragments.forEach(function (document) {\n        document.definitions.forEach(function (def) {\n            var type = typeFromAST_1.default(typeRegistry, def);\n            if (type) {\n                typeRegistry.addType(type.name, type, onTypeConflict);\n            }\n        });\n    });\n    var passedResolvers = {};\n    if (resolvers) {\n        if (typeof resolvers === 'function') {\n            passedResolvers = resolvers(mergeInfo);\n        }\n        else {\n            passedResolvers = __assign({}, resolvers);\n        }\n    }\n    Object.keys(passedResolvers).forEach(function (typeName) {\n        var type = passedResolvers[typeName];\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            return;\n        }\n        Object.keys(type).forEach(function (fieldName) {\n            var field = type[fieldName];\n            if (field.fragment) {\n                typeRegistry.addFragment(typeName, fieldName, field.fragment);\n            }\n        });\n    });\n    fullResolvers = mergeDeep(fullResolvers, passedResolvers);\n    var query = new graphql_1.GraphQLObjectType({\n        name: 'Query',\n        fields: function () { return schemaRecreation_1.fieldMapToFieldConfigMap(queryFields, typeRegistry); },\n    });\n    var mutation;\n    if (!isEmptyObject_1.default(mutationFields)) {\n        mutation = new graphql_1.GraphQLObjectType({\n            name: 'Mutation',\n            fields: function () { return schemaRecreation_1.fieldMapToFieldConfigMap(mutationFields, typeRegistry); },\n        });\n    }\n    var subscription;\n    if (!isEmptyObject_1.default(subscriptionFields)) {\n        subscription = new graphql_1.GraphQLObjectType({\n            name: 'Subscription',\n            fields: function () { return schemaRecreation_1.fieldMapToFieldConfigMap(subscriptionFields, typeRegistry); },\n        });\n    }\n    typeRegistry.addType('Query', query);\n    typeRegistry.addType('Mutation', mutation);\n    typeRegistry.addType('Subscription', subscription);\n    var mergedSchema = new graphql_1.GraphQLSchema({\n        query: query,\n        mutation: mutation,\n        subscription: subscription,\n        types: typeRegistry.getAllTypes(),\n    });\n    extensions.forEach(function (extension) {\n        // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n        mergedSchema = graphql_1.extendSchema(mergedSchema, extension, backcompatOptions);\n    });\n    schemaGenerator_1.addResolveFunctionsToSchema(mergedSchema, fullResolvers);\n    forEachField(mergedSchema, function (field) {\n        if (field.resolve) {\n            var fieldResolver_1 = field.resolve;\n            field.resolve = function (parent, args, context, info) {\n                var newInfo = __assign({}, info, { mergeInfo: mergeInfo });\n                return fieldResolver_1(parent, args, context, newInfo);\n            };\n        }\n    });\n    return mergedSchema;\n}\nexports.default = mergeSchemas;\nfunction defaultOnTypeConflict(left, right) {\n    return left;\n}\nfunction createMergeInfo(typeRegistry) {\n    return {\n        delegate: function (operation, fieldName, args, context, info) {\n            var schema = typeRegistry.getSchemaByField(operation, fieldName);\n            if (!schema) {\n                throw new Error(\"Cannot find subschema for root field \" + operation + \".\" + fieldName);\n            }\n            var fragmentReplacements = typeRegistry.fragmentReplacements;\n            return delegateToSchema_1.default(schema, fragmentReplacements, operation, fieldName, args, context, info);\n        },\n    };\n}\nfunction createDelegatingResolver(mergeInfo, operation, fieldName) {\n    return function (root, args, context, info) {\n        return mergeInfo.delegate(operation, fieldName, args, context, info);\n    };\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\nfunction mergeDeep(target, source) {\n    var output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n            if (isObject(source[key])) {\n                if (!(key in target)) {\n                    Object.assign(output, (_a = {}, _a[key] = source[key], _a));\n                }\n                else {\n                    output[key] = mergeDeep(target[key], source[key]);\n                }\n            }\n            else {\n                Object.assign(output, (_b = {}, _b[key] = source[key], _b));\n            }\n            var _a, _b;\n        });\n    }\n    return output;\n}\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\n//# sourceMappingURL=mergeSchemas.js.map","map":{"mappings":[{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/mergeSchemas.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}}],"sources":{"node_modules/graphql-tools/dist/stitching/mergeSchemas.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar TypeRegistry_1 = require(\"./TypeRegistry\");\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\nvar schemaGenerator_1 = require(\"../schemaGenerator\");\nvar schemaRecreation_1 = require(\"./schemaRecreation\");\nvar delegateToSchema_1 = require(\"./delegateToSchema\");\nvar typeFromAST_1 = require(\"./typeFromAST\");\nvar backcompatOptions = { commentDescriptions: true };\nfunction mergeSchemas(_a) {\n    var schemas = _a.schemas, onTypeConflict = _a.onTypeConflict, resolvers = _a.resolvers;\n    if (!onTypeConflict) {\n        onTypeConflict = defaultOnTypeConflict;\n    }\n    var queryFields = {};\n    var mutationFields = {};\n    var subscriptionFields = {};\n    var typeRegistry = new TypeRegistry_1.default();\n    var mergeInfo = createMergeInfo(typeRegistry);\n    var actualSchemas = [];\n    var typeFragments = [];\n    var extensions = [];\n    var fullResolvers = {};\n    schemas.forEach(function (schema) {\n        if (schema instanceof graphql_1.GraphQLSchema) {\n            actualSchemas.push(schema);\n        }\n        else if (typeof schema === 'string') {\n            var parsedSchemaDocument = graphql_1.parse(schema);\n            try {\n                // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n                var actualSchema = graphql_1.buildASTSchema(parsedSchemaDocument, backcompatOptions);\n                if (actualSchema.getQueryType()) {\n                    actualSchemas.push(actualSchema);\n                }\n            }\n            catch (e) {\n                typeFragments.push(parsedSchemaDocument);\n            }\n            parsedSchemaDocument = schemaGenerator_1.extractExtensionDefinitions(parsedSchemaDocument);\n            if (parsedSchemaDocument.definitions.length > 0) {\n                extensions.push(parsedSchemaDocument);\n            }\n        }\n    });\n    actualSchemas.forEach(function (schema) {\n        typeRegistry.addSchema(schema);\n        var queryType = schema.getQueryType();\n        var mutationType = schema.getMutationType();\n        var subscriptionType = schema.getSubscriptionType();\n        var typeMap = schema.getTypeMap();\n        Object.keys(typeMap).forEach(function (typeName) {\n            var type = typeMap[typeName];\n            if (graphql_1.isNamedType(type) &&\n                graphql_1.getNamedType(type).name.slice(0, 2) !== '__' &&\n                type !== queryType &&\n                type !== mutationType &&\n                type !== subscriptionType) {\n                var newType = void 0;\n                if (graphql_1.isCompositeType(type) || type instanceof graphql_1.GraphQLInputObjectType) {\n                    newType = schemaRecreation_1.recreateCompositeType(schema, type, typeRegistry);\n                }\n                else {\n                    newType = graphql_1.getNamedType(type);\n                }\n                if (newType instanceof graphql_1.GraphQLObjectType) {\n                    delete newType.isTypeOf;\n                }\n                typeRegistry.addType(newType.name, newType, onTypeConflict);\n            }\n        });\n        Object.keys(queryType.getFields()).forEach(function (name) {\n            if (!fullResolvers.Query) {\n                fullResolvers.Query = {};\n            }\n            fullResolvers.Query[name] = createDelegatingResolver(mergeInfo, 'query', name);\n        });\n        queryFields = __assign({}, queryFields, queryType.getFields());\n        if (mutationType) {\n            if (!fullResolvers.Mutation) {\n                fullResolvers.Mutation = {};\n            }\n            Object.keys(mutationType.getFields()).forEach(function (name) {\n                fullResolvers.Mutation[name] = createDelegatingResolver(mergeInfo, 'mutation', name);\n            });\n            mutationFields = __assign({}, mutationFields, mutationType.getFields());\n        }\n        if (subscriptionType) {\n            if (!fullResolvers.Subscription) {\n                fullResolvers.Subscription = {};\n            }\n            Object.keys(subscriptionType.getFields()).forEach(function (name) {\n                fullResolvers.Subscription[name] = {\n                    subscribe: createDelegatingResolver(mergeInfo, 'subscription', name),\n                };\n            });\n            subscriptionFields = __assign({}, subscriptionFields, subscriptionType.getFields());\n        }\n    });\n    typeFragments.forEach(function (document) {\n        document.definitions.forEach(function (def) {\n            var type = typeFromAST_1.default(typeRegistry, def);\n            if (type) {\n                typeRegistry.addType(type.name, type, onTypeConflict);\n            }\n        });\n    });\n    var passedResolvers = {};\n    if (resolvers) {\n        if (typeof resolvers === 'function') {\n            passedResolvers = resolvers(mergeInfo);\n        }\n        else {\n            passedResolvers = __assign({}, resolvers);\n        }\n    }\n    Object.keys(passedResolvers).forEach(function (typeName) {\n        var type = passedResolvers[typeName];\n        if (type instanceof graphql_1.GraphQLScalarType) {\n            return;\n        }\n        Object.keys(type).forEach(function (fieldName) {\n            var field = type[fieldName];\n            if (field.fragment) {\n                typeRegistry.addFragment(typeName, fieldName, field.fragment);\n            }\n        });\n    });\n    fullResolvers = mergeDeep(fullResolvers, passedResolvers);\n    var query = new graphql_1.GraphQLObjectType({\n        name: 'Query',\n        fields: function () { return schemaRecreation_1.fieldMapToFieldConfigMap(queryFields, typeRegistry); },\n    });\n    var mutation;\n    if (!isEmptyObject_1.default(mutationFields)) {\n        mutation = new graphql_1.GraphQLObjectType({\n            name: 'Mutation',\n            fields: function () { return schemaRecreation_1.fieldMapToFieldConfigMap(mutationFields, typeRegistry); },\n        });\n    }\n    var subscription;\n    if (!isEmptyObject_1.default(subscriptionFields)) {\n        subscription = new graphql_1.GraphQLObjectType({\n            name: 'Subscription',\n            fields: function () { return schemaRecreation_1.fieldMapToFieldConfigMap(subscriptionFields, typeRegistry); },\n        });\n    }\n    typeRegistry.addType('Query', query);\n    typeRegistry.addType('Mutation', mutation);\n    typeRegistry.addType('Subscription', subscription);\n    var mergedSchema = new graphql_1.GraphQLSchema({\n        query: query,\n        mutation: mutation,\n        subscription: subscription,\n        types: typeRegistry.getAllTypes(),\n    });\n    extensions.forEach(function (extension) {\n        // TODO fix types https://github.com/apollographql/graphql-tools/issues/542\n        mergedSchema = graphql_1.extendSchema(mergedSchema, extension, backcompatOptions);\n    });\n    schemaGenerator_1.addResolveFunctionsToSchema(mergedSchema, fullResolvers);\n    forEachField(mergedSchema, function (field) {\n        if (field.resolve) {\n            var fieldResolver_1 = field.resolve;\n            field.resolve = function (parent, args, context, info) {\n                var newInfo = __assign({}, info, { mergeInfo: mergeInfo });\n                return fieldResolver_1(parent, args, context, newInfo);\n            };\n        }\n    });\n    return mergedSchema;\n}\nexports.default = mergeSchemas;\nfunction defaultOnTypeConflict(left, right) {\n    return left;\n}\nfunction createMergeInfo(typeRegistry) {\n    return {\n        delegate: function (operation, fieldName, args, context, info) {\n            var schema = typeRegistry.getSchemaByField(operation, fieldName);\n            if (!schema) {\n                throw new Error(\"Cannot find subschema for root field \" + operation + \".\" + fieldName);\n            }\n            var fragmentReplacements = typeRegistry.fragmentReplacements;\n            return delegateToSchema_1.default(schema, fragmentReplacements, operation, fieldName, args, context, info);\n        },\n    };\n}\nfunction createDelegatingResolver(mergeInfo, operation, fieldName) {\n    return function (root, args, context, info) {\n        return mergeInfo.delegate(operation, fieldName, args, context, info);\n    };\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\nfunction mergeDeep(target, source) {\n    var output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n            if (isObject(source[key])) {\n                if (!(key in target)) {\n                    Object.assign(output, (_a = {}, _a[key] = source[key], _a));\n                }\n                else {\n                    output[key] = mergeDeep(target[key], source[key]);\n                }\n            }\n            else {\n                Object.assign(output, (_b = {}, _b[key] = source[key], _b));\n            }\n            var _a, _b;\n        });\n    }\n    return output;\n}\nfunction forEachField(schema, fn) {\n    var typeMap = schema.getTypeMap();\n    Object.keys(typeMap).forEach(function (typeName) {\n        var type = typeMap[typeName];\n        if (!graphql_1.getNamedType(type).name.startsWith('__') &&\n            type instanceof graphql_1.GraphQLObjectType) {\n            var fields_1 = type.getFields();\n            Object.keys(fields_1).forEach(function (fieldName) {\n                var field = fields_1[fieldName];\n                fn(field, typeName, fieldName);\n            });\n        }\n    });\n}\n//# sourceMappingURL=mergeSchemas.js.map"},"lineCount":240}},"hash":"d336a29d776fd69f26c64186adb2e5a5","cacheData":{"env":{}}}
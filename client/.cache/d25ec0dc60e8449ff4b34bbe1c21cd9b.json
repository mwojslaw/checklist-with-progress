{"dependencies":[{"name":"../../error","loc":{"line":9,"column":21}},{"name":"../../type/definition","loc":{"line":11,"column":26}},{"name":"../../utilities/typeComparators","loc":{"line":13,"column":31}},{"name":"../../utilities/typeFromAST","loc":{"line":15,"column":27}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badVarPosMessage = badVarPosMessage;\nexports.VariablesInAllowedPosition = VariablesInAllowedPosition;\n\nvar _error = require('../../error');\n\nvar _definition = require('../../type/definition');\n\nvar _typeComparators = require('../../utilities/typeComparators');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\nfunction badVarPosMessage(varName, varType, expectedType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(varType) + '\" used in ' + ('position expecting type \"' + String(expectedType) + '\".');\n}\n\n/**\n * Variables passed to field arguments conform to type\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node,\n              type = _ref.type;\n\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n            if (varType && !(0, _typeComparators.isTypeSubTypeOf)(schema, effectiveType(varType, varDef), type)) {\n              context.reportError(new _error.GraphQLError(badVarPosMessage(varName, varType, type), [varDef, node]));\n            }\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n\n// If a variable definition has a default value, it's effectively non-null.\nfunction effectiveType(varType, varDef) {\n  return !varDef.defaultValue || varType instanceof _definition.GraphQLNonNull ? varType : new _definition.GraphQLNonNull(varType);\n}","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/VariablesInAllowedPosition.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badVarPosMessage = badVarPosMessage;\nexports.VariablesInAllowedPosition = VariablesInAllowedPosition;\n\nvar _error = require('../../error');\n\nvar _definition = require('../../type/definition');\n\nvar _typeComparators = require('../../utilities/typeComparators');\n\nvar _typeFromAST = require('../../utilities/typeFromAST');\n\nfunction badVarPosMessage(varName, varType, expectedType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(varType) + '\" used in ' + ('position expecting type \"' + String(expectedType) + '\".');\n}\n\n/**\n * Variables passed to field arguments conform to type\n */\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node,\n              type = _ref.type;\n\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n            if (varType && !(0, _typeComparators.isTypeSubTypeOf)(schema, effectiveType(varType, varDef), type)) {\n              context.reportError(new _error.GraphQLError(badVarPosMessage(varName, varType, type), [varDef, node]));\n            }\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n\n// If a variable definition has a default value, it's effectively non-null.\nfunction effectiveType(varType, varDef) {\n  return !varDef.defaultValue || varType instanceof _definition.GraphQLNonNull ? varType : new _definition.GraphQLNonNull(varType);\n}"},"lineCount":75}},"hash":"6374d1f57225dcbae16291f29168adfa","cacheData":{"env":{}}}
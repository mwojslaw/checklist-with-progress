{"dependencies":[{"name":"../language/visitor","loc":{"line":8,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.separateOperations = separateOperations;\n\nvar _visitor = require('../language/visitor');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName = void 0;\n  var idx = 0;\n\n  // Populate metadata and build a dependency graph.\n  (0, _visitor.visit)(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  });\n\n  // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n  var separatedDocumentASTs = Object.create(null);\n  operations.forEach(function (operation) {\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName);\n\n    // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n    var definitions = [operation];\n    Object.keys(dependencies).forEach(function (name) {\n      definitions.push(fragments[name]);\n    });\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  });\n\n  return separatedDocumentASTs;\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n  if (immediateDeps) {\n    Object.keys(immediateDeps).forEach(function (toName) {\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    });\n  }\n}","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/utilities/separateOperations.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.separateOperations = separateOperations;\n\nvar _visitor = require('../language/visitor');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName = void 0;\n  var idx = 0;\n\n  // Populate metadata and build a dependency graph.\n  (0, _visitor.visit)(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  });\n\n  // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n  var separatedDocumentASTs = Object.create(null);\n  operations.forEach(function (operation) {\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName);\n\n    // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n    var definitions = [operation];\n    Object.keys(dependencies).forEach(function (name) {\n      definitions.push(fragments[name]);\n    });\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  });\n\n  return separatedDocumentASTs;\n}\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n  if (immediateDeps) {\n    Object.keys(immediateDeps).forEach(function (toName) {\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    });\n  }\n}"},"lineCount":95}},"hash":"f685f930f52bbf6f76beda65fc475999","cacheData":{"env":{}}}
{"dependencies":[{"name":"iterall","loc":{"line":18,"column":23}},{"name":"../jsutils/isInvalid","loc":{"line":20,"column":25}},{"name":"../jsutils/isNullish","loc":{"line":24,"column":25}},{"name":"../jsutils/orList","loc":{"line":28,"column":22}},{"name":"../jsutils/suggestionList","loc":{"line":32,"column":30}},{"name":"../error","loc":{"line":36,"column":21}},{"name":"../type/definition","loc":{"line":38,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                               * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * \n                                                                                                                                                                                                                                                                               */\n\nexports.coerceValue = coerceValue;\n\nvar _iterall = require('iterall');\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _orList = require('../jsutils/orList');\n\nvar _orList2 = _interopRequireDefault(_orList);\n\nvar _suggestionList = require('../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _error = require('../error');\n\nvar _definition = require('../type/definition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nfunction coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if ((0, _definition.isNonNullType)(type)) {\n    if ((0, _isNullish2.default)(value)) {\n      return ofErrors([coercionError('Expected non-nullable type ' + String(type) + ' not to be null', blameNode, path)]);\n    }\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if ((0, _isNullish2.default)(value)) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if ((0, _definition.isScalarType)(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n      if ((0, _isInvalid2.default)(parseResult)) {\n        return ofErrors([coercionError('Expected type ' + type.name, blameNode, path)]);\n      }\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, error.message, error)]);\n    }\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n    var suggestions = (0, _suggestionList2.default)(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? 'did you mean ' + (0, _orList2.default)(suggestions) + '?' : undefined;\n    return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, didYouMean)]);\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(value)) {\n      var _errors = void 0;\n      var coercedValue = [];\n      (0, _iterall.forEach)(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n        if (coercedItem.errors) {\n          _errors = add(_errors, coercedItem.errors);\n        } else if (!_errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return _errors ? ofErrors(_errors) : ofValue(coercedValue);\n    }\n    // Lists accept a non-list value as a list of one.\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return ofErrors([coercionError('Expected type ' + type.name + ' to be an object', blameNode, path)]);\n    }\n    var _errors2 = void 0;\n    var _coercedValue = {};\n    var fields = type.getFields();\n\n    // Ensure every defined field is valid.\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n        if ((0, _isInvalid2.default)(fieldValue)) {\n          if (!(0, _isInvalid2.default)(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if ((0, _definition.isNonNullType)(field.type)) {\n            _errors2 = add(_errors2, coercionError('Field ' + printPath(atPath(path, fieldName)) + ' of required ' + ('type ' + String(field.type) + ' was not provided'), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n          if (coercedField.errors) {\n            _errors2 = add(_errors2, coercedField.errors);\n          } else if (!_errors2) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    }\n\n    // Ensure every provided field is defined.\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = (0, _suggestionList2.default)(_fieldName, Object.keys(fields));\n          var _didYouMean = _suggestions.length !== 0 ? 'did you mean ' + (0, _orList2.default)(_suggestions) + '?' : undefined;\n          _errors2 = add(_errors2, coercionError('Field \"' + _fieldName + '\" is not defined by type ' + type.name, blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors2 ? ofErrors(_errors2) : ofValue(_coercedValue);\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unexpected type: ' + type + '.');\n}\n\nfunction ofValue(value) {\n  return { errors: undefined, value: value };\n}\n\nfunction ofErrors(errors) {\n  return { errors: errors, value: undefined };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path);\n  // Return a GraphQLError instance\n  return new _error.GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n}\n\n// Build a string describing the path into the value where the error was found\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;","map":{"mappings":[{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/graphql/utilities/coerceValue.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}}],"sources":{"node_modules/graphql/utilities/coerceValue.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                               * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                               * \n                                                                                                                                                                                                                                                                               */\n\nexports.coerceValue = coerceValue;\n\nvar _iterall = require('iterall');\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _orList = require('../jsutils/orList');\n\nvar _orList2 = _interopRequireDefault(_orList);\n\nvar _suggestionList = require('../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _error = require('../error');\n\nvar _definition = require('../type/definition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nfunction coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if ((0, _definition.isNonNullType)(type)) {\n    if ((0, _isNullish2.default)(value)) {\n      return ofErrors([coercionError('Expected non-nullable type ' + String(type) + ' not to be null', blameNode, path)]);\n    }\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if ((0, _isNullish2.default)(value)) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if ((0, _definition.isScalarType)(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n      if ((0, _isInvalid2.default)(parseResult)) {\n        return ofErrors([coercionError('Expected type ' + type.name, blameNode, path)]);\n      }\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, error.message, error)]);\n    }\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n    var suggestions = (0, _suggestionList2.default)(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? 'did you mean ' + (0, _orList2.default)(suggestions) + '?' : undefined;\n    return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, didYouMean)]);\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(value)) {\n      var _errors = void 0;\n      var coercedValue = [];\n      (0, _iterall.forEach)(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n        if (coercedItem.errors) {\n          _errors = add(_errors, coercedItem.errors);\n        } else if (!_errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return _errors ? ofErrors(_errors) : ofValue(coercedValue);\n    }\n    // Lists accept a non-list value as a list of one.\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return ofErrors([coercionError('Expected type ' + type.name + ' to be an object', blameNode, path)]);\n    }\n    var _errors2 = void 0;\n    var _coercedValue = {};\n    var fields = type.getFields();\n\n    // Ensure every defined field is valid.\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n        if ((0, _isInvalid2.default)(fieldValue)) {\n          if (!(0, _isInvalid2.default)(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if ((0, _definition.isNonNullType)(field.type)) {\n            _errors2 = add(_errors2, coercionError('Field ' + printPath(atPath(path, fieldName)) + ' of required ' + ('type ' + String(field.type) + ' was not provided'), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n          if (coercedField.errors) {\n            _errors2 = add(_errors2, coercedField.errors);\n          } else if (!_errors2) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    }\n\n    // Ensure every provided field is defined.\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = (0, _suggestionList2.default)(_fieldName, Object.keys(fields));\n          var _didYouMean = _suggestions.length !== 0 ? 'did you mean ' + (0, _orList2.default)(_suggestions) + '?' : undefined;\n          _errors2 = add(_errors2, coercionError('Field \"' + _fieldName + '\" is not defined by type ' + type.name, blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors2 ? ofErrors(_errors2) : ofValue(_coercedValue);\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unexpected type: ' + type + '.');\n}\n\nfunction ofValue(value) {\n  return { errors: undefined, value: value };\n}\n\nfunction ofErrors(errors) {\n  return { errors: errors, value: undefined };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path);\n  // Return a GraphQLError instance\n  return new _error.GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n}\n\n// Build a string describing the path into the value where the error was found\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;"},"lineCount":193}},"hash":"05c887d972799d070865f6fe93146a15","cacheData":{"env":{}}}
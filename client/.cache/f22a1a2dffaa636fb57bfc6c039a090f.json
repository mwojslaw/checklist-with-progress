{"dependencies":[{"name":"graphql","loc":{"line":46,"column":24}},{"name":"./errors","loc":{"line":47,"column":23}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar errors_1 = require(\"./errors\");\nfunction delegateToSchema(schema, fragmentReplacements, operation, fieldName, args, context, info) {\n    return __awaiter(this, void 0, void 0, function () {\n        var type, graphqlDoc, errors, operationDefinition, variableValues, _i, _a, definition, key, actualKey, result;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (operation === 'mutation') {\n                        type = schema.getMutationType();\n                    }\n                    else if (operation === 'subscription') {\n                        type = schema.getSubscriptionType();\n                    }\n                    else {\n                        type = schema.getQueryType();\n                    }\n                    if (!type) return [3 /*break*/, 3];\n                    graphqlDoc = createDocument(schema, fragmentReplacements, type, fieldName, operation, info.fieldNodes, info.fragments, info.operation.variableDefinitions);\n                    errors = graphql_1.validate(schema, graphqlDoc);\n                    if (errors.length > 0) {\n                        throw errors;\n                    }\n                    operationDefinition = graphqlDoc.definitions.find(function (_a) {\n                        var kind = _a.kind;\n                        return kind === graphql_1.Kind.OPERATION_DEFINITION;\n                    });\n                    variableValues = {};\n                    if (operationDefinition &&\n                        operationDefinition.kind === graphql_1.Kind.OPERATION_DEFINITION &&\n                        operationDefinition.variableDefinitions &&\n                        Array.isArray(operationDefinition.variableDefinitions)) {\n                        for (_i = 0, _a = operationDefinition.variableDefinitions; _i < _a.length; _i++) {\n                            definition = _a[_i];\n                            key = definition.variable.name.value;\n                            actualKey = key.startsWith('_') ? key.slice(1) : key;\n                            variableValues[key] = args[actualKey] != null ? args[actualKey] : info.variableValues[key];\n                        }\n                    }\n                    if (!(operation === 'query' || operation === 'mutation')) return [3 /*break*/, 2];\n                    return [4 /*yield*/, graphql_1.execute(schema, graphqlDoc, info.rootValue, context, variableValues)];\n                case 1:\n                    result = _b.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info, fieldName)];\n                case 2:\n                    if (operation === 'subscription') {\n                        return [2 /*return*/, graphql_1.subscribe(schema, graphqlDoc, info.rootValue, context, variableValues)];\n                    }\n                    _b.label = 3;\n                case 3: throw new Error('Could not forward to merged schema');\n            }\n        });\n    });\n}\nexports.default = delegateToSchema;\nfunction createDocument(schema, fragmentReplacements, type, rootFieldName, operation, selections, fragments, variableDefinitions) {\n    var rootField = type.getFields()[rootFieldName];\n    var newVariables = [];\n    var rootSelectionSet = {\n        kind: graphql_1.Kind.SELECTION_SET,\n        // (XXX) This (wrongly) assumes only having one fieldNode\n        selections: selections.map(function (selection) {\n            if (selection.kind === graphql_1.Kind.FIELD) {\n                var _a = processRootField(selection, rootFieldName, rootField), newSelection = _a.selection, variables = _a.variables;\n                newVariables.push.apply(newVariables, variables);\n                return newSelection;\n            }\n            else {\n                return selection;\n            }\n        }),\n    };\n    var newVariableDefinitions = newVariables.map(function (_a) {\n        var arg = _a.arg, variable = _a.variable;\n        var argDef = rootField.args.find(function (rootArg) { return rootArg.name === arg; });\n        if (!argDef) {\n            throw new Error('Unexpected missing arg');\n        }\n        var typeName = typeToAst(argDef.type);\n        return {\n            kind: graphql_1.Kind.VARIABLE_DEFINITION,\n            variable: {\n                kind: graphql_1.Kind.VARIABLE,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: variable,\n                },\n            },\n            type: typeName,\n        };\n    });\n    var _a = filterSelectionSetDeep(schema, fragmentReplacements, type, rootSelectionSet, fragments), selectionSet = _a.selectionSet, processedFragments = _a.fragments, usedVariables = _a.usedVariables;\n    var operationDefinition = {\n        kind: graphql_1.Kind.OPERATION_DEFINITION,\n        operation: operation,\n        variableDefinitions: (variableDefinitions || []).filter(function (variableDefinition) {\n            return usedVariables.indexOf(variableDefinition.variable.name.value) !== -1;\n        }).concat(newVariableDefinitions),\n        selectionSet: selectionSet,\n    };\n    var newDoc = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: [operationDefinition].concat(processedFragments),\n    };\n    return newDoc;\n}\nexports.createDocument = createDocument;\nfunction processRootField(selection, rootFieldName, rootField) {\n    var existingArguments = selection.arguments || [];\n    var existingArgumentNames = existingArguments.map(function (arg) { return arg.name.value; });\n    var allowedArguments = rootField.args.map(function (arg) { return arg.name; });\n    var missingArgumentNames = difference(allowedArguments, existingArgumentNames);\n    var extraArguments = difference(existingArgumentNames, allowedArguments);\n    var filteredExistingArguments = existingArguments.filter(function (arg) { return extraArguments.indexOf(arg.name.value) === -1; });\n    var variables = [];\n    var missingArguments = missingArgumentNames.map(function (name) {\n        // (XXX): really needs better var generation\n        var variableName = \"_\" + name;\n        variables.push({\n            arg: name,\n            variable: variableName,\n        });\n        return {\n            kind: graphql_1.Kind.ARGUMENT,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: name,\n            },\n            value: {\n                kind: graphql_1.Kind.VARIABLE,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: variableName,\n                },\n            },\n        };\n    });\n    return {\n        selection: {\n            kind: graphql_1.Kind.FIELD,\n            alias: null,\n            arguments: filteredExistingArguments.concat(missingArguments),\n            selectionSet: selection.selectionSet,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: rootFieldName,\n            },\n        },\n        variables: variables,\n    };\n}\nfunction filterSelectionSetDeep(schema, fragmentReplacements, type, selectionSet, fragments) {\n    var validFragments = [];\n    Object.keys(fragments).forEach(function (fragmentName) {\n        var fragment = fragments[fragmentName];\n        var typeName = fragment.typeCondition.name.value;\n        var innerType = schema.getType(typeName);\n        if (innerType) {\n            validFragments.push(fragment);\n        }\n    });\n    var _a = filterSelectionSet(schema, fragmentReplacements, type, selectionSet, validFragments), newSelectionSet = _a.selectionSet, remainingFragments = _a.usedFragments, usedVariables = _a.usedVariables;\n    var newFragments = {};\n    // (XXX): So this will break if we have a fragment that only has link fields\n    while (remainingFragments.length > 0) {\n        var name_1 = remainingFragments.pop();\n        if (newFragments[name_1]) {\n            continue;\n        }\n        else {\n            var nextFragment = fragments[name_1];\n            if (!name_1) {\n                throw new Error(\"Could not find fragment \" + name_1);\n            }\n            var typeName = nextFragment.typeCondition.name.value;\n            var innerType = schema.getType(typeName);\n            if (!innerType) {\n                continue;\n            }\n            var _b = filterSelectionSet(schema, fragmentReplacements, innerType, nextFragment.selectionSet, validFragments), fragmentSelectionSet = _b.selectionSet, fragmentUsedFragments = _b.usedFragments, fragmentUsedVariables = _b.usedVariables;\n            remainingFragments = union(remainingFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            newFragments[name_1] = {\n                kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: name_1,\n                },\n                typeCondition: nextFragment.typeCondition,\n                selectionSet: fragmentSelectionSet,\n            };\n        }\n    }\n    var newFragmentValues = Object.keys(newFragments).map(function (name) { return newFragments[name]; });\n    return {\n        selectionSet: newSelectionSet,\n        fragments: newFragmentValues,\n        usedVariables: usedVariables,\n    };\n}\nfunction filterSelectionSet(schema, fragmentReplacements, type, selectionSet, validFragments) {\n    var usedFragments = [];\n    var usedVariables = [];\n    var typeStack = [type];\n    var filteredSelectionSet = graphql_1.visit(selectionSet, (_a = {},\n        _a[graphql_1.Kind.FIELD] = {\n            enter: function (node) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                if (parentType instanceof graphql_1.GraphQLObjectType ||\n                    parentType instanceof graphql_1.GraphQLInterfaceType) {\n                    var fields = parentType.getFields();\n                    var field = node.name.value === '__typename'\n                        ? graphql_1.TypeNameMetaFieldDef\n                        : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    else {\n                        typeStack.push(field.type);\n                    }\n                }\n                else if (parentType instanceof graphql_1.GraphQLUnionType &&\n                    node.name.value === '__typename') {\n                    typeStack.push(graphql_1.TypeNameMetaFieldDef.type);\n                }\n            },\n            leave: function () {\n                typeStack.pop();\n            },\n        },\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = resolveType(typeStack[typeStack.length - 1]);\n            var parentTypeName = parentType.name;\n            var selections = node.selections;\n            if ((parentType instanceof graphql_1.GraphQLInterfaceType ||\n                parentType instanceof graphql_1.GraphQLUnionType) &&\n                !selections.find(function (_) {\n                    return _.kind === graphql_1.Kind.FIELD &&\n                        _.name.value === '__typename';\n                })) {\n                selections = selections.concat({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (fragmentReplacements[parentTypeName]) {\n                selections.forEach(function (selection) {\n                    if (selection.kind === graphql_1.Kind.FIELD) {\n                        var name_2 = selection.name.value;\n                        var fragment = fragmentReplacements[parentTypeName][name_2];\n                        if (fragment) {\n                            selections = selections.concat(fragment);\n                        }\n                    }\n                });\n            }\n            if (selections !== node.selections) {\n                return __assign({}, node, { selections: selections });\n            }\n        },\n        _a[graphql_1.Kind.FRAGMENT_SPREAD] = function (node) {\n            var fragmentFiltered = validFragments.filter(function (frg) { return frg.name.value === node.name.value; });\n            var fragment = fragmentFiltered[0];\n            if (fragment) {\n                if (fragment.typeCondition) {\n                    var innerType = schema.getType(fragment.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (!implementsAbstractType(parentType, innerType)) {\n                        return null;\n                    }\n                }\n                usedFragments.push(node.name.value);\n                return;\n            }\n            else {\n                return null;\n            }\n        },\n        _a[graphql_1.Kind.INLINE_FRAGMENT] = {\n            enter: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (implementsAbstractType(parentType, innerType)) {\n                        typeStack.push(innerType);\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            leave: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    if (innerType) {\n                        typeStack.pop();\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[graphql_1.Kind.VARIABLE] = function (node) {\n            usedVariables.push(node.name.value);\n        },\n        _a));\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments: usedFragments,\n        usedVariables: usedVariables,\n    };\n    var _a;\n}\nfunction resolveType(type) {\n    var lastType = type;\n    while (lastType instanceof graphql_1.GraphQLNonNull ||\n        lastType instanceof graphql_1.GraphQLList) {\n        lastType = lastType.ofType;\n    }\n    return lastType;\n}\nfunction implementsAbstractType(parent, child, bail) {\n    if (bail === void 0) { bail = false; }\n    if (parent === child) {\n        return true;\n    }\n    else if (parent instanceof graphql_1.GraphQLInterfaceType &&\n        child instanceof graphql_1.GraphQLObjectType) {\n        return child.getInterfaces().indexOf(parent) !== -1;\n    }\n    else if (parent instanceof graphql_1.GraphQLInterfaceType &&\n        child instanceof graphql_1.GraphQLInterfaceType) {\n        return true;\n    }\n    else if (parent instanceof graphql_1.GraphQLUnionType &&\n        child instanceof graphql_1.GraphQLObjectType) {\n        return parent.getTypes().indexOf(child) !== -1;\n    }\n    else if (parent instanceof graphql_1.GraphQLObjectType && !bail) {\n        return implementsAbstractType(child, parent, true);\n    }\n    return false;\n}\nfunction typeToAst(type) {\n    if (type instanceof graphql_1.GraphQLNonNull) {\n        var innerType = typeToAst(type.ofType);\n        if (innerType.kind === graphql_1.Kind.LIST_TYPE ||\n            innerType.kind === graphql_1.Kind.NAMED_TYPE) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                type: innerType,\n            };\n        }\n        else {\n            throw new Error('Incorrent inner non-null type');\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLList) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: typeToAst(type.ofType),\n        };\n    }\n    else {\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.toString(),\n            },\n        };\n    }\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var cache = {};\n    var result = [];\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            if (!cache[item]) {\n                cache[item] = true;\n                result.push(item);\n            }\n        });\n    });\n    return result;\n}\nfunction difference(from) {\n    var arrays = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arrays[_i - 1] = arguments[_i];\n    }\n    var cache = {};\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            cache[item] = true;\n        });\n    });\n    return from.filter(function (item) { return !cache[item]; });\n}\n//# sourceMappingURL=delegateToSchema.js.map","map":{"mappings":[{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/delegateToSchema.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}}],"sources":{"node_modules/graphql-tools/dist/stitching/delegateToSchema.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar errors_1 = require(\"./errors\");\nfunction delegateToSchema(schema, fragmentReplacements, operation, fieldName, args, context, info) {\n    return __awaiter(this, void 0, void 0, function () {\n        var type, graphqlDoc, errors, operationDefinition, variableValues, _i, _a, definition, key, actualKey, result;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (operation === 'mutation') {\n                        type = schema.getMutationType();\n                    }\n                    else if (operation === 'subscription') {\n                        type = schema.getSubscriptionType();\n                    }\n                    else {\n                        type = schema.getQueryType();\n                    }\n                    if (!type) return [3 /*break*/, 3];\n                    graphqlDoc = createDocument(schema, fragmentReplacements, type, fieldName, operation, info.fieldNodes, info.fragments, info.operation.variableDefinitions);\n                    errors = graphql_1.validate(schema, graphqlDoc);\n                    if (errors.length > 0) {\n                        throw errors;\n                    }\n                    operationDefinition = graphqlDoc.definitions.find(function (_a) {\n                        var kind = _a.kind;\n                        return kind === graphql_1.Kind.OPERATION_DEFINITION;\n                    });\n                    variableValues = {};\n                    if (operationDefinition &&\n                        operationDefinition.kind === graphql_1.Kind.OPERATION_DEFINITION &&\n                        operationDefinition.variableDefinitions &&\n                        Array.isArray(operationDefinition.variableDefinitions)) {\n                        for (_i = 0, _a = operationDefinition.variableDefinitions; _i < _a.length; _i++) {\n                            definition = _a[_i];\n                            key = definition.variable.name.value;\n                            actualKey = key.startsWith('_') ? key.slice(1) : key;\n                            variableValues[key] = args[actualKey] != null ? args[actualKey] : info.variableValues[key];\n                        }\n                    }\n                    if (!(operation === 'query' || operation === 'mutation')) return [3 /*break*/, 2];\n                    return [4 /*yield*/, graphql_1.execute(schema, graphqlDoc, info.rootValue, context, variableValues)];\n                case 1:\n                    result = _b.sent();\n                    return [2 /*return*/, errors_1.checkResultAndHandleErrors(result, info, fieldName)];\n                case 2:\n                    if (operation === 'subscription') {\n                        return [2 /*return*/, graphql_1.subscribe(schema, graphqlDoc, info.rootValue, context, variableValues)];\n                    }\n                    _b.label = 3;\n                case 3: throw new Error('Could not forward to merged schema');\n            }\n        });\n    });\n}\nexports.default = delegateToSchema;\nfunction createDocument(schema, fragmentReplacements, type, rootFieldName, operation, selections, fragments, variableDefinitions) {\n    var rootField = type.getFields()[rootFieldName];\n    var newVariables = [];\n    var rootSelectionSet = {\n        kind: graphql_1.Kind.SELECTION_SET,\n        // (XXX) This (wrongly) assumes only having one fieldNode\n        selections: selections.map(function (selection) {\n            if (selection.kind === graphql_1.Kind.FIELD) {\n                var _a = processRootField(selection, rootFieldName, rootField), newSelection = _a.selection, variables = _a.variables;\n                newVariables.push.apply(newVariables, variables);\n                return newSelection;\n            }\n            else {\n                return selection;\n            }\n        }),\n    };\n    var newVariableDefinitions = newVariables.map(function (_a) {\n        var arg = _a.arg, variable = _a.variable;\n        var argDef = rootField.args.find(function (rootArg) { return rootArg.name === arg; });\n        if (!argDef) {\n            throw new Error('Unexpected missing arg');\n        }\n        var typeName = typeToAst(argDef.type);\n        return {\n            kind: graphql_1.Kind.VARIABLE_DEFINITION,\n            variable: {\n                kind: graphql_1.Kind.VARIABLE,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: variable,\n                },\n            },\n            type: typeName,\n        };\n    });\n    var _a = filterSelectionSetDeep(schema, fragmentReplacements, type, rootSelectionSet, fragments), selectionSet = _a.selectionSet, processedFragments = _a.fragments, usedVariables = _a.usedVariables;\n    var operationDefinition = {\n        kind: graphql_1.Kind.OPERATION_DEFINITION,\n        operation: operation,\n        variableDefinitions: (variableDefinitions || []).filter(function (variableDefinition) {\n            return usedVariables.indexOf(variableDefinition.variable.name.value) !== -1;\n        }).concat(newVariableDefinitions),\n        selectionSet: selectionSet,\n    };\n    var newDoc = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: [operationDefinition].concat(processedFragments),\n    };\n    return newDoc;\n}\nexports.createDocument = createDocument;\nfunction processRootField(selection, rootFieldName, rootField) {\n    var existingArguments = selection.arguments || [];\n    var existingArgumentNames = existingArguments.map(function (arg) { return arg.name.value; });\n    var allowedArguments = rootField.args.map(function (arg) { return arg.name; });\n    var missingArgumentNames = difference(allowedArguments, existingArgumentNames);\n    var extraArguments = difference(existingArgumentNames, allowedArguments);\n    var filteredExistingArguments = existingArguments.filter(function (arg) { return extraArguments.indexOf(arg.name.value) === -1; });\n    var variables = [];\n    var missingArguments = missingArgumentNames.map(function (name) {\n        // (XXX): really needs better var generation\n        var variableName = \"_\" + name;\n        variables.push({\n            arg: name,\n            variable: variableName,\n        });\n        return {\n            kind: graphql_1.Kind.ARGUMENT,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: name,\n            },\n            value: {\n                kind: graphql_1.Kind.VARIABLE,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: variableName,\n                },\n            },\n        };\n    });\n    return {\n        selection: {\n            kind: graphql_1.Kind.FIELD,\n            alias: null,\n            arguments: filteredExistingArguments.concat(missingArguments),\n            selectionSet: selection.selectionSet,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: rootFieldName,\n            },\n        },\n        variables: variables,\n    };\n}\nfunction filterSelectionSetDeep(schema, fragmentReplacements, type, selectionSet, fragments) {\n    var validFragments = [];\n    Object.keys(fragments).forEach(function (fragmentName) {\n        var fragment = fragments[fragmentName];\n        var typeName = fragment.typeCondition.name.value;\n        var innerType = schema.getType(typeName);\n        if (innerType) {\n            validFragments.push(fragment);\n        }\n    });\n    var _a = filterSelectionSet(schema, fragmentReplacements, type, selectionSet, validFragments), newSelectionSet = _a.selectionSet, remainingFragments = _a.usedFragments, usedVariables = _a.usedVariables;\n    var newFragments = {};\n    // (XXX): So this will break if we have a fragment that only has link fields\n    while (remainingFragments.length > 0) {\n        var name_1 = remainingFragments.pop();\n        if (newFragments[name_1]) {\n            continue;\n        }\n        else {\n            var nextFragment = fragments[name_1];\n            if (!name_1) {\n                throw new Error(\"Could not find fragment \" + name_1);\n            }\n            var typeName = nextFragment.typeCondition.name.value;\n            var innerType = schema.getType(typeName);\n            if (!innerType) {\n                continue;\n            }\n            var _b = filterSelectionSet(schema, fragmentReplacements, innerType, nextFragment.selectionSet, validFragments), fragmentSelectionSet = _b.selectionSet, fragmentUsedFragments = _b.usedFragments, fragmentUsedVariables = _b.usedVariables;\n            remainingFragments = union(remainingFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            newFragments[name_1] = {\n                kind: graphql_1.Kind.FRAGMENT_DEFINITION,\n                name: {\n                    kind: graphql_1.Kind.NAME,\n                    value: name_1,\n                },\n                typeCondition: nextFragment.typeCondition,\n                selectionSet: fragmentSelectionSet,\n            };\n        }\n    }\n    var newFragmentValues = Object.keys(newFragments).map(function (name) { return newFragments[name]; });\n    return {\n        selectionSet: newSelectionSet,\n        fragments: newFragmentValues,\n        usedVariables: usedVariables,\n    };\n}\nfunction filterSelectionSet(schema, fragmentReplacements, type, selectionSet, validFragments) {\n    var usedFragments = [];\n    var usedVariables = [];\n    var typeStack = [type];\n    var filteredSelectionSet = graphql_1.visit(selectionSet, (_a = {},\n        _a[graphql_1.Kind.FIELD] = {\n            enter: function (node) {\n                var parentType = resolveType(typeStack[typeStack.length - 1]);\n                if (parentType instanceof graphql_1.GraphQLObjectType ||\n                    parentType instanceof graphql_1.GraphQLInterfaceType) {\n                    var fields = parentType.getFields();\n                    var field = node.name.value === '__typename'\n                        ? graphql_1.TypeNameMetaFieldDef\n                        : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    else {\n                        typeStack.push(field.type);\n                    }\n                }\n                else if (parentType instanceof graphql_1.GraphQLUnionType &&\n                    node.name.value === '__typename') {\n                    typeStack.push(graphql_1.TypeNameMetaFieldDef.type);\n                }\n            },\n            leave: function () {\n                typeStack.pop();\n            },\n        },\n        _a[graphql_1.Kind.SELECTION_SET] = function (node) {\n            var parentType = resolveType(typeStack[typeStack.length - 1]);\n            var parentTypeName = parentType.name;\n            var selections = node.selections;\n            if ((parentType instanceof graphql_1.GraphQLInterfaceType ||\n                parentType instanceof graphql_1.GraphQLUnionType) &&\n                !selections.find(function (_) {\n                    return _.kind === graphql_1.Kind.FIELD &&\n                        _.name.value === '__typename';\n                })) {\n                selections = selections.concat({\n                    kind: graphql_1.Kind.FIELD,\n                    name: {\n                        kind: graphql_1.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n            }\n            if (fragmentReplacements[parentTypeName]) {\n                selections.forEach(function (selection) {\n                    if (selection.kind === graphql_1.Kind.FIELD) {\n                        var name_2 = selection.name.value;\n                        var fragment = fragmentReplacements[parentTypeName][name_2];\n                        if (fragment) {\n                            selections = selections.concat(fragment);\n                        }\n                    }\n                });\n            }\n            if (selections !== node.selections) {\n                return __assign({}, node, { selections: selections });\n            }\n        },\n        _a[graphql_1.Kind.FRAGMENT_SPREAD] = function (node) {\n            var fragmentFiltered = validFragments.filter(function (frg) { return frg.name.value === node.name.value; });\n            var fragment = fragmentFiltered[0];\n            if (fragment) {\n                if (fragment.typeCondition) {\n                    var innerType = schema.getType(fragment.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (!implementsAbstractType(parentType, innerType)) {\n                        return null;\n                    }\n                }\n                usedFragments.push(node.name.value);\n                return;\n            }\n            else {\n                return null;\n            }\n        },\n        _a[graphql_1.Kind.INLINE_FRAGMENT] = {\n            enter: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    var parentType = resolveType(typeStack[typeStack.length - 1]);\n                    if (implementsAbstractType(parentType, innerType)) {\n                        typeStack.push(innerType);\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            leave: function (node) {\n                if (node.typeCondition) {\n                    var innerType = schema.getType(node.typeCondition.name.value);\n                    if (innerType) {\n                        typeStack.pop();\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n        _a[graphql_1.Kind.VARIABLE] = function (node) {\n            usedVariables.push(node.name.value);\n        },\n        _a));\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments: usedFragments,\n        usedVariables: usedVariables,\n    };\n    var _a;\n}\nfunction resolveType(type) {\n    var lastType = type;\n    while (lastType instanceof graphql_1.GraphQLNonNull ||\n        lastType instanceof graphql_1.GraphQLList) {\n        lastType = lastType.ofType;\n    }\n    return lastType;\n}\nfunction implementsAbstractType(parent, child, bail) {\n    if (bail === void 0) { bail = false; }\n    if (parent === child) {\n        return true;\n    }\n    else if (parent instanceof graphql_1.GraphQLInterfaceType &&\n        child instanceof graphql_1.GraphQLObjectType) {\n        return child.getInterfaces().indexOf(parent) !== -1;\n    }\n    else if (parent instanceof graphql_1.GraphQLInterfaceType &&\n        child instanceof graphql_1.GraphQLInterfaceType) {\n        return true;\n    }\n    else if (parent instanceof graphql_1.GraphQLUnionType &&\n        child instanceof graphql_1.GraphQLObjectType) {\n        return parent.getTypes().indexOf(child) !== -1;\n    }\n    else if (parent instanceof graphql_1.GraphQLObjectType && !bail) {\n        return implementsAbstractType(child, parent, true);\n    }\n    return false;\n}\nfunction typeToAst(type) {\n    if (type instanceof graphql_1.GraphQLNonNull) {\n        var innerType = typeToAst(type.ofType);\n        if (innerType.kind === graphql_1.Kind.LIST_TYPE ||\n            innerType.kind === graphql_1.Kind.NAMED_TYPE) {\n            return {\n                kind: graphql_1.Kind.NON_NULL_TYPE,\n                type: innerType,\n            };\n        }\n        else {\n            throw new Error('Incorrent inner non-null type');\n        }\n    }\n    else if (type instanceof graphql_1.GraphQLList) {\n        return {\n            kind: graphql_1.Kind.LIST_TYPE,\n            type: typeToAst(type.ofType),\n        };\n    }\n    else {\n        return {\n            kind: graphql_1.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql_1.Kind.NAME,\n                value: type.toString(),\n            },\n        };\n    }\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var cache = {};\n    var result = [];\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            if (!cache[item]) {\n                cache[item] = true;\n                result.push(item);\n            }\n        });\n    });\n    return result;\n}\nfunction difference(from) {\n    var arrays = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        arrays[_i - 1] = arguments[_i];\n    }\n    var cache = {};\n    arrays.forEach(function (array) {\n        array.forEach(function (item) {\n            cache[item] = true;\n        });\n    });\n    return from.filter(function (item) { return !cache[item]; });\n}\n//# sourceMappingURL=delegateToSchema.js.map"},"lineCount":453}},"hash":"1bdf7d71187a79a24ec315fdfc88a9bd","cacheData":{"env":{}}}
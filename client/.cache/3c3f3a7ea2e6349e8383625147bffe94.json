{"dependencies":[{"name":"./linkUtils","loc":{"line":21,"column":26}},{"name":"graphql-tag","loc":{"line":22,"column":28}},{"name":"zen-observable-ts","loc":{"line":23,"column":34}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar linkUtils_1 = require(\"./linkUtils\");\nvar graphql_tag_1 = require(\"graphql-tag\");\nvar zen_observable_ts_1 = require(\"zen-observable-ts\");\nvar ApolloLink = (function () {\n    function ApolloLink() {\n    }\n    ApolloLink.from = function (links) {\n        if (links.length === 0) {\n            return ApolloLink.empty();\n        }\n        return links.map(linkUtils_1.toLink).reduce(function (x, y) { return x.concat(y); });\n    };\n    ApolloLink.empty = function () {\n        return new FunctionLink(function (op, forward) { return zen_observable_ts_1.default.of(); });\n    };\n    ApolloLink.passthrough = function () {\n        return new FunctionLink(function (op, forward) { return (forward ? forward(op) : zen_observable_ts_1.default.of()); });\n    };\n    ApolloLink.split = function (test, left, right) {\n        if (right === void 0) { right = ApolloLink.passthrough(); }\n        var leftLink = linkUtils_1.validateLink(linkUtils_1.toLink(left));\n        var rightLink = linkUtils_1.validateLink(linkUtils_1.toLink(right));\n        if (linkUtils_1.isTerminating(leftLink) && linkUtils_1.isTerminating(rightLink)) {\n            return new FunctionLink(function (operation) {\n                return test(operation)\n                    ? leftLink.request(operation) || zen_observable_ts_1.default.of()\n                    : rightLink.request(operation) || zen_observable_ts_1.default.of();\n            });\n        }\n        else {\n            return new FunctionLink(function (operation, forward) {\n                return test(operation)\n                    ? leftLink.request(operation, forward) || zen_observable_ts_1.default.of()\n                    : rightLink.request(operation, forward) || zen_observable_ts_1.default.of();\n            });\n        }\n    };\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = ApolloLink.passthrough(); }\n        return this.concat(ApolloLink.split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        var _this = this;\n        linkUtils_1.validateLink(this);\n        if (linkUtils_1.isTerminating(this)) {\n            console.warn(new linkUtils_1.LinkError(\"You are calling concat on a terminating link, which will have no effect\", this));\n            return this;\n        }\n        var nextLink = linkUtils_1.validateLink(linkUtils_1.toLink(next));\n        if (linkUtils_1.isTerminating(nextLink)) {\n            return new FunctionLink(function (operation) {\n                return _this.request(operation, function (op) { return nextLink.request(op) || zen_observable_ts_1.default.of(); }) || zen_observable_ts_1.default.of();\n            });\n        }\n        else {\n            return new FunctionLink(function (operation, forward) {\n                return (_this.request(operation, function (op) {\n                    return nextLink.request(op, forward) || zen_observable_ts_1.default.of();\n                }) || zen_observable_ts_1.default.of());\n            });\n        }\n    };\n    return ApolloLink;\n}());\nexports.ApolloLink = ApolloLink;\nfunction execute(link, operation) {\n    var copy = __assign({}, operation);\n    linkUtils_1.validateOperation(copy);\n    if (!copy.context) {\n        copy.context = {};\n    }\n    if (!copy.variables) {\n        copy.variables = {};\n    }\n    if (!copy.query) {\n        console.warn(\"query should either be a string or GraphQL AST\");\n        copy.query = {};\n    }\n    return link.request(transformOperation(copy)) || zen_observable_ts_1.default.of();\n}\nexports.execute = execute;\nfunction getName(node) {\n    return node && node.name && node.name.kind === 'Name' && node.name.value;\n}\nfunction transformOperation(operation) {\n    var transformedOperation;\n    if (typeof operation.query === 'string') {\n        transformedOperation = __assign({}, operation, { query: graphql_tag_1.default(operation.query) });\n    }\n    else {\n        transformedOperation = __assign({}, operation);\n    }\n    if (transformedOperation.query && transformedOperation.query.definitions) {\n        if (!transformedOperation.operationName) {\n            var operationTypes_1 = ['query', 'mutation', 'subscription'];\n            var definitions = transformedOperation.query.definitions.filter(function (x) {\n                return x.kind === 'OperationDefinition' &&\n                    operationTypes_1.indexOf(x.operation) >= 0;\n            });\n            transformedOperation.operationName = getName(definitions[0]) || '';\n        }\n    }\n    else if (!transformedOperation.operationName) {\n        transformedOperation.operationName = '';\n    }\n    return transformedOperation;\n}\nvar FunctionLink = (function (_super) {\n    __extends(FunctionLink, _super);\n    function FunctionLink(f) {\n        var _this = _super.call(this) || this;\n        _this.f = f;\n        _this.request = f;\n        return _this;\n    }\n    FunctionLink.prototype.request = function (operation, forward) {\n        throw Error('should be overridden');\n    };\n    return FunctionLink;\n}(ApolloLink));\nexports.FunctionLink = FunctionLink;\n//# sourceMappingURL=link.js.map","map":{"mappings":[{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/apollo-link-core/lib/link.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}}],"sources":{"node_modules/apollo-link-core/lib/link.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar linkUtils_1 = require(\"./linkUtils\");\nvar graphql_tag_1 = require(\"graphql-tag\");\nvar zen_observable_ts_1 = require(\"zen-observable-ts\");\nvar ApolloLink = (function () {\n    function ApolloLink() {\n    }\n    ApolloLink.from = function (links) {\n        if (links.length === 0) {\n            return ApolloLink.empty();\n        }\n        return links.map(linkUtils_1.toLink).reduce(function (x, y) { return x.concat(y); });\n    };\n    ApolloLink.empty = function () {\n        return new FunctionLink(function (op, forward) { return zen_observable_ts_1.default.of(); });\n    };\n    ApolloLink.passthrough = function () {\n        return new FunctionLink(function (op, forward) { return (forward ? forward(op) : zen_observable_ts_1.default.of()); });\n    };\n    ApolloLink.split = function (test, left, right) {\n        if (right === void 0) { right = ApolloLink.passthrough(); }\n        var leftLink = linkUtils_1.validateLink(linkUtils_1.toLink(left));\n        var rightLink = linkUtils_1.validateLink(linkUtils_1.toLink(right));\n        if (linkUtils_1.isTerminating(leftLink) && linkUtils_1.isTerminating(rightLink)) {\n            return new FunctionLink(function (operation) {\n                return test(operation)\n                    ? leftLink.request(operation) || zen_observable_ts_1.default.of()\n                    : rightLink.request(operation) || zen_observable_ts_1.default.of();\n            });\n        }\n        else {\n            return new FunctionLink(function (operation, forward) {\n                return test(operation)\n                    ? leftLink.request(operation, forward) || zen_observable_ts_1.default.of()\n                    : rightLink.request(operation, forward) || zen_observable_ts_1.default.of();\n            });\n        }\n    };\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = ApolloLink.passthrough(); }\n        return this.concat(ApolloLink.split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        var _this = this;\n        linkUtils_1.validateLink(this);\n        if (linkUtils_1.isTerminating(this)) {\n            console.warn(new linkUtils_1.LinkError(\"You are calling concat on a terminating link, which will have no effect\", this));\n            return this;\n        }\n        var nextLink = linkUtils_1.validateLink(linkUtils_1.toLink(next));\n        if (linkUtils_1.isTerminating(nextLink)) {\n            return new FunctionLink(function (operation) {\n                return _this.request(operation, function (op) { return nextLink.request(op) || zen_observable_ts_1.default.of(); }) || zen_observable_ts_1.default.of();\n            });\n        }\n        else {\n            return new FunctionLink(function (operation, forward) {\n                return (_this.request(operation, function (op) {\n                    return nextLink.request(op, forward) || zen_observable_ts_1.default.of();\n                }) || zen_observable_ts_1.default.of());\n            });\n        }\n    };\n    return ApolloLink;\n}());\nexports.ApolloLink = ApolloLink;\nfunction execute(link, operation) {\n    var copy = __assign({}, operation);\n    linkUtils_1.validateOperation(copy);\n    if (!copy.context) {\n        copy.context = {};\n    }\n    if (!copy.variables) {\n        copy.variables = {};\n    }\n    if (!copy.query) {\n        console.warn(\"query should either be a string or GraphQL AST\");\n        copy.query = {};\n    }\n    return link.request(transformOperation(copy)) || zen_observable_ts_1.default.of();\n}\nexports.execute = execute;\nfunction getName(node) {\n    return node && node.name && node.name.kind === 'Name' && node.name.value;\n}\nfunction transformOperation(operation) {\n    var transformedOperation;\n    if (typeof operation.query === 'string') {\n        transformedOperation = __assign({}, operation, { query: graphql_tag_1.default(operation.query) });\n    }\n    else {\n        transformedOperation = __assign({}, operation);\n    }\n    if (transformedOperation.query && transformedOperation.query.definitions) {\n        if (!transformedOperation.operationName) {\n            var operationTypes_1 = ['query', 'mutation', 'subscription'];\n            var definitions = transformedOperation.query.definitions.filter(function (x) {\n                return x.kind === 'OperationDefinition' &&\n                    operationTypes_1.indexOf(x.operation) >= 0;\n            });\n            transformedOperation.operationName = getName(definitions[0]) || '';\n        }\n    }\n    else if (!transformedOperation.operationName) {\n        transformedOperation.operationName = '';\n    }\n    return transformedOperation;\n}\nvar FunctionLink = (function (_super) {\n    __extends(FunctionLink, _super);\n    function FunctionLink(f) {\n        var _this = _super.call(this) || this;\n        _this.f = f;\n        _this.request = f;\n        return _this;\n    }\n    FunctionLink.prototype.request = function (operation, forward) {\n        throw Error('should be overridden');\n    };\n    return FunctionLink;\n}(ApolloLink));\nexports.FunctionLink = FunctionLink;\n//# sourceMappingURL=link.js.map"},"lineCount":142}},"hash":"e0fde86c09b368eaa1f8e393b988c624","cacheData":{"env":{}}}
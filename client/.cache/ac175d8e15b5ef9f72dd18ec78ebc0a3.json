{"dependencies":[{"name":"../../error","loc":{"line":9,"column":21}},{"name":"../../jsutils/suggestionList","loc":{"line":11,"column":30}},{"name":"../../jsutils/quotedOrList","loc":{"line":15,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unknownTypeMessage(type, suggestedTypes) {\n  var message = 'Unknown type \"' + String(type) + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/validation/rules/KnownTypeNames.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nfunction unknownTypeMessage(type, suggestedTypes) {\n  var message = 'Unknown type \"' + String(type) + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}"},"lineCount":70}},"hash":"1c39f3afa38e06bd3611034e39b04918","cacheData":{"env":{}}}
{"dependencies":[{"name":"iterall","loc":{"line":19,"column":23}},{"name":"../jsutils/invariant","loc":{"line":21,"column":25}},{"name":"../jsutils/isNullish","loc":{"line":25,"column":25}},{"name":"../jsutils/isInvalid","loc":{"line":29,"column":25}},{"name":"../language/kinds","loc":{"line":33,"column":21}},{"name":"../type/definition","loc":{"line":37,"column":26}},{"name":"../type/scalars","loc":{"line":39,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexports.astFromValue = astFromValue;\n\nvar _iterall = require('iterall');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nvar _scalars = require('../type/scalars');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a GraphQL Value AST given a JavaScript value.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  // Ensure flow knows that we treat function params as const.\n  var _value = value;\n\n  if (type instanceof _definition.GraphQLNonNull) {\n    var astValue = astFromValue(_value, type.ofType);\n    if (astValue && astValue.kind === Kind.NULL) {\n      return null;\n    }\n    return astValue;\n  }\n\n  // only explicit null, not undefined, NaN\n  if (_value === null) {\n    return { kind: Kind.NULL };\n  }\n\n  // undefined, NaN\n  if ((0, _isInvalid2.default)(_value)) {\n    return null;\n  }\n\n  // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(_value)) {\n      var valuesNodes = [];\n      (0, _iterall.forEach)(_value, function (item) {\n        var itemNode = astFromValue(item, itemType);\n        if (itemNode) {\n          valuesNodes.push(itemNode);\n        }\n      });\n      return { kind: Kind.LIST, values: valuesNodes };\n    }\n    return astFromValue(_value, itemType);\n  }\n\n  // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if (_value === null || (typeof _value === 'undefined' ? 'undefined' : _typeof(_value)) !== 'object') {\n      return null;\n    }\n    var fields = type.getFields();\n    var fieldNodes = [];\n    Object.keys(fields).forEach(function (fieldName) {\n      var fieldType = fields[fieldName].type;\n      var fieldValue = astFromValue(_value[fieldName], fieldType);\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: { kind: Kind.NAME, value: fieldName },\n          value: fieldValue\n        });\n      }\n    });\n    return { kind: Kind.OBJECT, fields: fieldNodes };\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must provide Input Type, cannot use: ' + String(type)) : void 0;\n\n  // Since value is an internally represented value, it must be serialized\n  // to an externally represented value before converting into an AST.\n  var serialized = type.serialize(_value);\n  if ((0, _isNullish2.default)(serialized)) {\n    return null;\n  }\n\n  // Others serialize based on their corresponding JavaScript scalar types.\n  if (typeof serialized === 'boolean') {\n    return { kind: Kind.BOOLEAN, value: serialized };\n  }\n\n  // JavaScript numbers can be Int or Float values.\n  if (typeof serialized === 'number') {\n    var stringNum = String(serialized);\n    return (/^[0-9]+$/.test(stringNum) ? { kind: Kind.INT, value: stringNum } : { kind: Kind.FLOAT, value: stringNum }\n    );\n  }\n\n  if (typeof serialized === 'string') {\n    // Enum types use Enum literals.\n    if (type instanceof _definition.GraphQLEnumType) {\n      return { kind: Kind.ENUM, value: serialized };\n    }\n\n    // ID types can use Int literals.\n    if (type === _scalars.GraphQLID && /^[0-9]+$/.test(serialized)) {\n      return { kind: Kind.INT, value: serialized };\n    }\n\n    // Use JSON stringify, which uses the same string encoding as GraphQL,\n    // then remove the quotes.\n    return {\n      kind: Kind.STRING,\n      value: JSON.stringify(serialized).slice(1, -1)\n    };\n  }\n\n  throw new TypeError('Cannot convert value to AST: ' + String(serialized));\n}","map":{"mappings":[{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}}],"sources":{"node_modules/apollo-test-utils/node_modules/graphql/utilities/astFromValue.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexports.astFromValue = astFromValue;\n\nvar _iterall = require('iterall');\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _kinds = require('../language/kinds');\n\nvar Kind = _interopRequireWildcard(_kinds);\n\nvar _definition = require('../type/definition');\n\nvar _scalars = require('../type/scalars');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a GraphQL Value AST given a JavaScript value.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  // Ensure flow knows that we treat function params as const.\n  var _value = value;\n\n  if (type instanceof _definition.GraphQLNonNull) {\n    var astValue = astFromValue(_value, type.ofType);\n    if (astValue && astValue.kind === Kind.NULL) {\n      return null;\n    }\n    return astValue;\n  }\n\n  // only explicit null, not undefined, NaN\n  if (_value === null) {\n    return { kind: Kind.NULL };\n  }\n\n  // undefined, NaN\n  if ((0, _isInvalid2.default)(_value)) {\n    return null;\n  }\n\n  // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n  if (type instanceof _definition.GraphQLList) {\n    var itemType = type.ofType;\n    if ((0, _iterall.isCollection)(_value)) {\n      var valuesNodes = [];\n      (0, _iterall.forEach)(_value, function (item) {\n        var itemNode = astFromValue(item, itemType);\n        if (itemNode) {\n          valuesNodes.push(itemNode);\n        }\n      });\n      return { kind: Kind.LIST, values: valuesNodes };\n    }\n    return astFromValue(_value, itemType);\n  }\n\n  // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n  if (type instanceof _definition.GraphQLInputObjectType) {\n    if (_value === null || (typeof _value === 'undefined' ? 'undefined' : _typeof(_value)) !== 'object') {\n      return null;\n    }\n    var fields = type.getFields();\n    var fieldNodes = [];\n    Object.keys(fields).forEach(function (fieldName) {\n      var fieldType = fields[fieldName].type;\n      var fieldValue = astFromValue(_value[fieldName], fieldType);\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: { kind: Kind.NAME, value: fieldName },\n          value: fieldValue\n        });\n      }\n    });\n    return { kind: Kind.OBJECT, fields: fieldNodes };\n  }\n\n  !(type instanceof _definition.GraphQLScalarType || type instanceof _definition.GraphQLEnumType) ? (0, _invariant2.default)(0, 'Must provide Input Type, cannot use: ' + String(type)) : void 0;\n\n  // Since value is an internally represented value, it must be serialized\n  // to an externally represented value before converting into an AST.\n  var serialized = type.serialize(_value);\n  if ((0, _isNullish2.default)(serialized)) {\n    return null;\n  }\n\n  // Others serialize based on their corresponding JavaScript scalar types.\n  if (typeof serialized === 'boolean') {\n    return { kind: Kind.BOOLEAN, value: serialized };\n  }\n\n  // JavaScript numbers can be Int or Float values.\n  if (typeof serialized === 'number') {\n    var stringNum = String(serialized);\n    return (/^[0-9]+$/.test(stringNum) ? { kind: Kind.INT, value: stringNum } : { kind: Kind.FLOAT, value: stringNum }\n    );\n  }\n\n  if (typeof serialized === 'string') {\n    // Enum types use Enum literals.\n    if (type instanceof _definition.GraphQLEnumType) {\n      return { kind: Kind.ENUM, value: serialized };\n    }\n\n    // ID types can use Int literals.\n    if (type === _scalars.GraphQLID && /^[0-9]+$/.test(serialized)) {\n      return { kind: Kind.INT, value: serialized };\n    }\n\n    // Use JSON stringify, which uses the same string encoding as GraphQL,\n    // then remove the quotes.\n    return {\n      kind: Kind.STRING,\n      value: JSON.stringify(serialized).slice(1, -1)\n    };\n  }\n\n  throw new TypeError('Cannot convert value to AST: ' + String(serialized));\n}"},"lineCount":164}},"hash":"aecb29d6c359f0a79aadfee3d096e7b5","cacheData":{"env":{}}}
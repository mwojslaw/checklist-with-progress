{"dependencies":[{"name":"graphql","loc":{"line":3,"column":24}},{"name":"./resolveFromParentTypename","loc":{"line":9,"column":42}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\n//\n// TODO put back import once PR is merged\n// https://github.com/graphql/graphql-js/pull/1165\n// import { getDescription } from 'graphql/utilities/buildASTSchema';\nvar backcompatOptions = { commentDescriptions: true };\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nfunction typeFromAST(typeRegistry, node) {\n    switch (node.kind) {\n        case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(typeRegistry, node);\n        case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(typeRegistry, node);\n        case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(typeRegistry, node);\n        case graphql_1.Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(typeRegistry, node);\n        case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(typeRegistry, node);\n        case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(typeRegistry, node);\n        default:\n            return null;\n    }\n}\nexports.default = typeFromAST;\nfunction makeObjectType(typeRegistry, node) {\n    return new graphql_1.GraphQLObjectType({\n        name: node.name.value,\n        fields: function () { return makeFields(typeRegistry, node.fields); },\n        interfaces: function () {\n            return node.interfaces.map(function (iface) { return typeRegistry.getType(iface.name.value); });\n        },\n        description: getDescription(node, backcompatOptions),\n    });\n}\nfunction makeInterfaceType(typeRegistry, node) {\n    return new graphql_1.GraphQLInterfaceType({\n        name: node.name.value,\n        fields: function () { return makeFields(typeRegistry, node.fields); },\n        description: getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeEnumType(typeRegistry, node) {\n    var values = {};\n    node.values.forEach(function (value) {\n        values[value.name.value] = {\n            description: getDescription(value, backcompatOptions),\n        };\n    });\n    return new graphql_1.GraphQLEnumType({\n        name: node.name.value,\n        values: values,\n        description: getDescription(node, backcompatOptions),\n    });\n}\nfunction makeUnionType(typeRegistry, node) {\n    return new graphql_1.GraphQLUnionType({\n        name: node.name.value,\n        types: function () {\n            return node.types.map(function (type) { return resolveType(typeRegistry, type); });\n        },\n        description: getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeScalarType(typeRegistry, node) {\n    return new graphql_1.GraphQLScalarType({\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        serialize: function () { return null; },\n        // Note: validation calls the parse functions to determine if a\n        // literal value is correct. Returning null would cause use of custom\n        // scalars to always fail validation. Returning false causes them to\n        // always pass validation.\n        parseValue: function () { return false; },\n        parseLiteral: function () { return false; },\n    });\n}\nfunction makeInputObjectType(typeRegistry, node) {\n    return new graphql_1.GraphQLInputObjectType({\n        name: node.name.value,\n        fields: function () { return makeValues(typeRegistry, node.fields); },\n        description: getDescription(node, backcompatOptions),\n    });\n}\nfunction makeFields(typeRegistry, nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        result[node.name.value] = {\n            type: resolveType(typeRegistry, node.type),\n            args: makeValues(typeRegistry, node.arguments),\n            description: getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction makeValues(typeRegistry, nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        var type = resolveType(typeRegistry, node.type);\n        result[node.name.value] = {\n            type: type,\n            defaultValue: graphql_1.valueFromAST(node.defaultValue, type),\n            description: getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction resolveType(typeRegistry, node) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(resolveType(typeRegistry, node.type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(resolveType(typeRegistry, node.type));\n        default:\n            return typeRegistry.getType(node.name.value);\n    }\n}\n// Code below temporarily copied from graphql/graphql-js pending PR\n// https://github.com/graphql/graphql-js/pull/1165\n// MIT License\n// Copyright (c) 2015-present, Facebook, Inc.\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nfunction getDescription(node, options) {\n    if (node.description) {\n        return node.description.value;\n    }\n    if (options && options.commentDescriptions) {\n        var rawValue = getLeadingCommentBlock(node);\n        if (rawValue !== undefined) {\n            return blockStringValue('\\n' + rawValue);\n        }\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    var loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    var comments = [];\n    var token = loc.startToken.prev;\n    while (token &&\n        token.kind === 'Comment' &&\n        token.next &&\n        token.prev &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        var value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.reverse().join('\\n');\n}\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction blockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    var commonIndent = null;\n    for (var i = 1; i < lines.length; i++) {\n        var line = lines[i];\n        var indent = leadingWhitespace(line);\n        if (indent < line.length &&\n            (commonIndent === null || indent < commonIndent)) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    if (commonIndent) {\n        for (var i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\nfunction leadingWhitespace(str) {\n    var i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceMappingURL=typeFromAST.js.map","map":{"mappings":[{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/graphql-tools/dist/stitching/typeFromAST.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}}],"sources":{"node_modules/graphql-tools/dist/stitching/typeFromAST.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\n//\n// TODO put back import once PR is merged\n// https://github.com/graphql/graphql-js/pull/1165\n// import { getDescription } from 'graphql/utilities/buildASTSchema';\nvar backcompatOptions = { commentDescriptions: true };\nvar resolveFromParentTypename_1 = require(\"./resolveFromParentTypename\");\nfunction typeFromAST(typeRegistry, node) {\n    switch (node.kind) {\n        case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(typeRegistry, node);\n        case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(typeRegistry, node);\n        case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(typeRegistry, node);\n        case graphql_1.Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(typeRegistry, node);\n        case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(typeRegistry, node);\n        case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(typeRegistry, node);\n        default:\n            return null;\n    }\n}\nexports.default = typeFromAST;\nfunction makeObjectType(typeRegistry, node) {\n    return new graphql_1.GraphQLObjectType({\n        name: node.name.value,\n        fields: function () { return makeFields(typeRegistry, node.fields); },\n        interfaces: function () {\n            return node.interfaces.map(function (iface) { return typeRegistry.getType(iface.name.value); });\n        },\n        description: getDescription(node, backcompatOptions),\n    });\n}\nfunction makeInterfaceType(typeRegistry, node) {\n    return new graphql_1.GraphQLInterfaceType({\n        name: node.name.value,\n        fields: function () { return makeFields(typeRegistry, node.fields); },\n        description: getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeEnumType(typeRegistry, node) {\n    var values = {};\n    node.values.forEach(function (value) {\n        values[value.name.value] = {\n            description: getDescription(value, backcompatOptions),\n        };\n    });\n    return new graphql_1.GraphQLEnumType({\n        name: node.name.value,\n        values: values,\n        description: getDescription(node, backcompatOptions),\n    });\n}\nfunction makeUnionType(typeRegistry, node) {\n    return new graphql_1.GraphQLUnionType({\n        name: node.name.value,\n        types: function () {\n            return node.types.map(function (type) { return resolveType(typeRegistry, type); });\n        },\n        description: getDescription(node, backcompatOptions),\n        resolveType: function (parent, context, info) {\n            return resolveFromParentTypename_1.default(parent, info.schema);\n        },\n    });\n}\nfunction makeScalarType(typeRegistry, node) {\n    return new graphql_1.GraphQLScalarType({\n        name: node.name.value,\n        description: getDescription(node, backcompatOptions),\n        serialize: function () { return null; },\n        // Note: validation calls the parse functions to determine if a\n        // literal value is correct. Returning null would cause use of custom\n        // scalars to always fail validation. Returning false causes them to\n        // always pass validation.\n        parseValue: function () { return false; },\n        parseLiteral: function () { return false; },\n    });\n}\nfunction makeInputObjectType(typeRegistry, node) {\n    return new graphql_1.GraphQLInputObjectType({\n        name: node.name.value,\n        fields: function () { return makeValues(typeRegistry, node.fields); },\n        description: getDescription(node, backcompatOptions),\n    });\n}\nfunction makeFields(typeRegistry, nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        result[node.name.value] = {\n            type: resolveType(typeRegistry, node.type),\n            args: makeValues(typeRegistry, node.arguments),\n            description: getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction makeValues(typeRegistry, nodes) {\n    var result = {};\n    nodes.forEach(function (node) {\n        var type = resolveType(typeRegistry, node.type);\n        result[node.name.value] = {\n            type: type,\n            defaultValue: graphql_1.valueFromAST(node.defaultValue, type),\n            description: getDescription(node, backcompatOptions),\n        };\n    });\n    return result;\n}\nfunction resolveType(typeRegistry, node) {\n    switch (node.kind) {\n        case graphql_1.Kind.LIST_TYPE:\n            return new graphql_1.GraphQLList(resolveType(typeRegistry, node.type));\n        case graphql_1.Kind.NON_NULL_TYPE:\n            return new graphql_1.GraphQLNonNull(resolveType(typeRegistry, node.type));\n        default:\n            return typeRegistry.getType(node.name.value);\n    }\n}\n// Code below temporarily copied from graphql/graphql-js pending PR\n// https://github.com/graphql/graphql-js/pull/1165\n// MIT License\n// Copyright (c) 2015-present, Facebook, Inc.\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nfunction getDescription(node, options) {\n    if (node.description) {\n        return node.description.value;\n    }\n    if (options && options.commentDescriptions) {\n        var rawValue = getLeadingCommentBlock(node);\n        if (rawValue !== undefined) {\n            return blockStringValue('\\n' + rawValue);\n        }\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    var loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    var comments = [];\n    var token = loc.startToken.prev;\n    while (token &&\n        token.kind === 'Comment' &&\n        token.next &&\n        token.prev &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        var value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.reverse().join('\\n');\n}\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction blockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    var commonIndent = null;\n    for (var i = 1; i < lines.length; i++) {\n        var line = lines[i];\n        var indent = leadingWhitespace(line);\n        if (indent < line.length &&\n            (commonIndent === null || indent < commonIndent)) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    if (commonIndent) {\n        for (var i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\nfunction leadingWhitespace(str) {\n    var i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceMappingURL=typeFromAST.js.map"},"lineCount":223}},"hash":"43d1523f8db0e74bb04fc78a53b00d3d","cacheData":{"env":{}}}